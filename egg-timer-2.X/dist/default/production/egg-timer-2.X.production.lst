

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Jul 12 15:20:46 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,space=0,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x5E,2
    17     0000                     
    18                           ; Generated 17/08/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F675 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0004                     fsr             equ	4
    53     0004                     fsr0            equ	4
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0000                     INDF            equ	0	;# 
    61     0001                     TMR0            equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR             equ	4	;# 
    65     0005                     GPIO            equ	5	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0019                     CMCON           equ	25	;# 
    74     001E                     ADRESH          equ	30	;# 
    75     001F                     ADCON0          equ	31	;# 
    76     0081                     OPTION_REG      equ	129	;# 
    77     0085                     TRISIO          equ	133	;# 
    78     008C                     PIE1            equ	140	;# 
    79     008E                     PCON            equ	142	;# 
    80     0090                     OSCCAL          equ	144	;# 
    81     0095                     WPU             equ	149	;# 
    82     0096                     IOC             equ	150	;# 
    83     0096                     IOCB            equ	150	;# 
    84     0099                     VRCON           equ	153	;# 
    85     009A                     EEDATA          equ	154	;# 
    86     009A                     EEDAT           equ	154	;# 
    87     009B                     EEADR           equ	155	;# 
    88     009C                     EECON1          equ	156	;# 
    89     009D                     EECON2          equ	157	;# 
    90     009E                     ADRESL          equ	158	;# 
    91     009F                     ANSEL           equ	159	;# 
    92     0000                     INDF            equ	0	;# 
    93     0001                     TMR0            equ	1	;# 
    94     0002                     PCL             equ	2	;# 
    95     0003                     STATUS          equ	3	;# 
    96     0004                     FSR             equ	4	;# 
    97     0005                     GPIO            equ	5	;# 
    98     000A                     PCLATH          equ	10	;# 
    99     000B                     INTCON          equ	11	;# 
   100     000C                     PIR1            equ	12	;# 
   101     000E                     TMR1            equ	14	;# 
   102     000E                     TMR1L           equ	14	;# 
   103     000F                     TMR1H           equ	15	;# 
   104     0010                     T1CON           equ	16	;# 
   105     0019                     CMCON           equ	25	;# 
   106     001E                     ADRESH          equ	30	;# 
   107     001F                     ADCON0          equ	31	;# 
   108     0081                     OPTION_REG      equ	129	;# 
   109     0085                     TRISIO          equ	133	;# 
   110     008C                     PIE1            equ	140	;# 
   111     008E                     PCON            equ	142	;# 
   112     0090                     OSCCAL          equ	144	;# 
   113     0095                     WPU             equ	149	;# 
   114     0096                     IOC             equ	150	;# 
   115     0096                     IOCB            equ	150	;# 
   116     0099                     VRCON           equ	153	;# 
   117     009A                     EEDATA          equ	154	;# 
   118     009A                     EEDAT           equ	154	;# 
   119     009B                     EEADR           equ	155	;# 
   120     009C                     EECON1          equ	156	;# 
   121     009D                     EECON2          equ	157	;# 
   122     009E                     ADRESL          equ	158	;# 
   123     009F                     ANSEL           equ	159	;# 
   124                           
   125                           	psect	idataBANK0
   126     0213                     __pidataBANK0:
   127                           
   128                           ;initializer for _finalquantity
   129     0213  34D0               	retlw	208
   130     0214  3407               	retlw	7
   131     000B                     _INTCON         set	11
   132     001F                     _ADCON0         set	31
   133     0019                     _CMCON          set	25
   134     0001                     _TMR0           set	1
   135     001E                     _ADRESH         set	30
   136     001F                     _ADCON0bits     set	31
   137     002A                     _GP2            set	42
   138     002D                     _GP5            set	45
   139     005A                     _T0IF           set	90
   140     0085                     _TRISIO         set	133
   141     0081                     _OPTION_REG     set	129
   142     0090                     _OSCCAL         set	144
   143     0095                     _WPU            set	149
   144     009F                     _ANSEL          set	159
   145     009E                     _ADRESL         set	158
   146                           
   147                           	psect	cinit
   148     000E                     start_initialization:	
   149                           ; #config settings
   150                           
   151     000E                     __initialization:
   152                           
   153                           ; Initialize objects allocated to BANK0
   154     000E  2213               	fcall	__pidataBANK0	;fetch initializer
   155     000F  00CA               	movwf	__pdataBANK0& (0+127)
   156     0010  2214               	fcall	__pidataBANK0+1	;fetch initializer
   157     0011  00CB               	movwf	(__pdataBANK0+1)& (0+127)
   158                           
   159                           ; Clear objects allocated to BANK0
   160     0012  1383               	bcf	3,7	;select IRP bank0
   161     0013  3020               	movlw	low __pbssBANK0
   162     0014  0084               	movwf	4
   163     0015  3043               	movlw	low (__pbssBANK0+35)
   164     0016  220B               	fcall	clear_ram0
   165     0017                     end_of_initialization:	
   166                           ;End of C runtime variable initialization code
   167                           
   168     0017                     __end_of__initialization:
   169     0017  0183               	clrf	3
   170     0018  294A               	ljmp	_main	;jump to C main() function
   171                           
   172                           	psect	bssBANK0
   173     0020                     __pbssBANK0:
   174     0020                     _tempo_led:
   175     0020                     	ds	4
   176     0024                     _longtimecounter:
   177     0024                     	ds	2
   178     0026                     _finalbuzzercounter:
   179     0026                     	ds	2
   180     0028                     _supercounter:
   181     0028                     	ds	2
   182     002A                     _counttime:
   183     002A                     	ds	2
   184     002C                     _buttontimercounter:
   185     002C                     	ds	2
   186     002E                     _processbuttonclicks:
   187     002E                     	ds	2
   188     0030                     _adc_value:
   189     0030                     	ds	2
   190     0032                     _buttonstimer:
   191     0032                     	ds	2
   192     0034                     _ledtimer:
   193     0034                     	ds	2
   194     0036                     _buttonpressed:
   195     0036                     	ds	2
   196     0038                     _processstarted:
   197     0038                     	ds	1
   198     0039                     _buzzeron:
   199     0039                     	ds	1
   200     003A                     _finalbuzzer:
   201     003A                     	ds	1
   202     003B                     _timecontrol:
   203     003B                     	ds	1
   204     003C                     _starttimer:
   205     003C                     	ds	1
   206     003D                     _enterbuttontimercounter:
   207     003D                     	ds	1
   208     003E                     _canstartblinking:
   209     003E                     	ds	1
   210     003F                     _startbutton:
   211     003F                     	ds	1
   212     0040                     _start:
   213     0040                     	ds	1
   214     0041                     _buttonclicks:
   215     0041                     	ds	2
   216                           
   217                           	psect	dataBANK0
   218     004A                     __pdataBANK0:
   219     004A                     _finalquantity:
   220     004A                     	ds	2
   221                           
   222                           	psect	clrtext
   223     020B                     clear_ram0:	
   224                           ;	Called with FSR containing the base address, and
   225                           ;	W with the last address+1
   226                           
   227     020B  0064               	clrwdt	;clear the watchdog before getting into this loop
   228     020C                     clrloop0:
   229     020C  0180               	clrf	0	;clear RAM location pointed to by FSR
   230     020D  0A84               	incf	4,f	;increment pointer
   231     020E  0604               	xorwf	4,w	;XOR with final address
   232     020F  1903               	btfsc	3,2	;have we reached the end yet?
   233     0210  3400               	retlw	0	;all done for this memory range, return
   234     0211  0604               	xorwf	4,w	;XOR again to restore value
   235     0212  2A0C               	goto	clrloop0	;do the next byte
   236                           
   237                           	psect	cstackCOMMON
   238     0000                     __pcstackCOMMON:
   239     0000                     ??_Read_Adc:
   240     0000                     ??_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           	psect	cstackBANK0
   245     0043                     __pcstackBANK0:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0043                     ?_ISR:
   249     0043                     ?_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0043                     ??_ISR:	
   253                           ; 1 bytes @ 0x0
   254                           
   255                           
   256                           ; 1 bytes @ 0x0
   257     0043                     	ds	5
   258     0048                     ?_Read_Adc:
   259                           
   260                           ; 2 bytes @ 0x5
   261     0048                     	ds	2
   262                           
   263                           	psect	maintext
   264     014A                     __pmaintext:	
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 162 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : B00/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMMON   BANK0
   284 ;;      Params:         0       0
   285 ;;      Locals:         0       0
   286 ;;      Temps:          0       0
   287 ;;      Totals:         0       0
   288 ;;Total ram usage:        0 bytes
   289 ;; Hardware stack levels required when called: 2
   290 ;; This function calls:
   291 ;;		_Read_Adc
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297     014A                     _main:	
   298                           ;psect for function _main
   299                           
   300     014A                     l938:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   303                           
   304     014A  3007               	movlw	7
   305     014B  1283               	bcf	3,5	;RP0=0, select bank0
   306     014C  0099               	movwf	25	;volatile
   307                           
   308                           ;main.c: 173:     ANSEL = 0b00100001;
   309     014D  3021               	movlw	33
   310     014E  1683               	bsf	3,5	;RP0=1, select bank1
   311     014F  009F               	movwf	31	;volatile
   312                           
   313                           ;main.c: 181:     ADCON0 = 0b10000001;
   314     0150  3081               	movlw	129
   315     0151  1283               	bcf	3,5	;RP0=0, select bank0
   316     0152  009F               	movwf	31	;volatile
   317     0153                     l940:
   318                           
   319                           ;main.c: 184:     WPU = 0X00;
   320     0153  1683               	bsf	3,5	;RP0=1, select bank1
   321     0154  0195               	clrf	21	;volatile
   322                           
   323                           ;main.c: 187:     TMR0 = 0;
   324     0155  1283               	bcf	3,5	;RP0=0, select bank0
   325     0156  0181               	clrf	1	;volatile
   326     0157                     l942:
   327                           
   328                           ;main.c: 190:     OSCCAL = 0XFF;
   329     0157  30FF               	movlw	255
   330     0158  1683               	bsf	3,5	;RP0=1, select bank1
   331     0159  0090               	movwf	16	;volatile
   332     015A                     l944:
   333                           
   334                           ;main.c: 201:     OPTION_REG = 0X81;
   335     015A  3081               	movlw	129
   336     015B  0081               	movwf	1	;volatile
   337     015C                     l946:
   338                           
   339                           ;main.c: 212:     INTCON = 0XE0;
   340     015C  30E0               	movlw	224
   341     015D  008B               	movwf	11	;volatile
   342     015E                     l948:
   343                           
   344                           ;main.c: 221:     TRISIO = 0X03;
   345     015E  3003               	movlw	3
   346     015F  0085               	movwf	5	;volatile
   347     0160                     l950:
   348                           
   349                           ;main.c: 226:         if (buttonstimer >= 300) {
   350     0160  1283               	bcf	3,5	;RP0=0, select bank0
   351     0161  0833               	movf	_buttonstimer+1,w	;volatile
   352     0162  3A80               	xorlw	128
   353     0163  00DF               	movwf	btemp+1
   354     0164  3081               	movlw	129
   355     0165  025F               	subwf	btemp+1,w
   356     0166  1D03               	skipz
   357     0167  296A               	goto	u645
   358     0168  302C               	movlw	44
   359     0169  0232               	subwf	_buttonstimer,w	;volatile
   360     016A                     u645:
   361     016A  1C03               	skipc
   362     016B  296D               	goto	u641
   363     016C  296E               	goto	u640
   364     016D                     u641:
   365     016D  29DE               	goto	l990
   366     016E                     u640:
   367     016E                     l952:
   368                           
   369                           ;main.c: 227:             buttonstimer = 0;
   370     016E  1283               	bcf	3,5	;RP0=0, select bank0
   371     016F  01B2               	clrf	_buttonstimer	;volatile
   372     0170  01B3               	clrf	_buttonstimer+1	;volatile
   373     0171                     l954:
   374                           
   375                           ;main.c: 229:             adc_value = Read_Adc();
   376     0171  21FE               	fcall	_Read_Adc
   377     0172  1283               	bcf	3,5	;RP0=0, select bank0
   378     0173  0849               	movf	?_Read_Adc+1,w
   379     0174  00B1               	movwf	_adc_value+1	;volatile
   380     0175  0848               	movf	?_Read_Adc,w
   381     0176  00B0               	movwf	_adc_value	;volatile
   382     0177                     l956:
   383                           
   384                           ;main.c: 233:             if (adc_value > 90 && adc_value <= 1023 && canstartblinking ==
      +                           0 && starttimer == 0) {
   385     0177  3000               	movlw	0
   386     0178  0231               	subwf	_adc_value+1,w	;volatile
   387     0179  305B               	movlw	91
   388     017A  1903               	skipnz
   389     017B  0230               	subwf	_adc_value,w	;volatile
   390     017C  1C03               	skipc
   391     017D  297F               	goto	u651
   392     017E  2980               	goto	u650
   393     017F                     u651:
   394     017F  29B6               	goto	l976
   395     0180                     u650:
   396     0180                     l958:
   397     0180  3004               	movlw	4
   398     0181  0231               	subwf	_adc_value+1,w	;volatile
   399     0182  3000               	movlw	0
   400     0183  1903               	skipnz
   401     0184  0230               	subwf	_adc_value,w	;volatile
   402     0185  1803               	skipnc
   403     0186  2988               	goto	u661
   404     0187  2989               	goto	u660
   405     0188                     u661:
   406     0188  29B6               	goto	l976
   407     0189                     u660:
   408     0189                     l960:
   409     0189  083E               	movf	_canstartblinking,w	;volatile
   410     018A  1D03               	btfss	3,2
   411     018B  298D               	goto	u671
   412     018C  298E               	goto	u670
   413     018D                     u671:
   414     018D  29B6               	goto	l976
   415     018E                     u670:
   416     018E                     l962:
   417     018E  083C               	movf	_starttimer,w	;volatile
   418     018F  1D03               	btfss	3,2
   419     0190  2992               	goto	u681
   420     0191  2993               	goto	u680
   421     0192                     u681:
   422     0192  29B6               	goto	l976
   423     0193                     u680:
   424     0193                     l964:
   425                           
   426                           ;main.c: 234:                 buttonclicks++;
   427     0193  3001               	movlw	1
   428     0194  07C1               	addwf	_buttonclicks,f	;volatile
   429     0195  1803               	skipnc
   430     0196  0AC2               	incf	_buttonclicks+1,f	;volatile
   431     0197  3000               	movlw	0
   432     0198  07C2               	addwf	_buttonclicks+1,f	;volatile
   433     0199                     l966:
   434                           
   435                           ;main.c: 235:                 processstarted = 1;
   436     0199  3001               	movlw	1
   437     019A  00B8               	movwf	_processstarted	;volatile
   438     019B                     l968:
   439                           
   440                           ;main.c: 237:                 if (buttonclicks == 1) {
   441     019B  0341               	decf	_buttonclicks,w	;volatile
   442     019C  0442               	iorwf	_buttonclicks+1,w	;volatile
   443     019D  1D03               	btfss	3,2
   444     019E  29A0               	goto	u691
   445     019F  29A1               	goto	u690
   446     01A0                     u691:
   447     01A0  29A4               	goto	l972
   448     01A1                     u690:
   449     01A1                     l970:
   450                           
   451                           ;main.c: 238:                     enterbuttontimercounter = 1;
   452     01A1  3001               	movlw	1
   453     01A2  00BD               	movwf	_enterbuttontimercounter	;volatile
   454                           
   455                           ;main.c: 239:                 } else if (buttonclicks > 4) {
   456     01A3  29B6               	goto	l976
   457     01A4                     l972:
   458     01A4  0842               	movf	_buttonclicks+1,w	;volatile
   459     01A5  3A80               	xorlw	128
   460     01A6  00DF               	movwf	btemp+1
   461     01A7  3080               	movlw	128
   462     01A8  025F               	subwf	btemp+1,w
   463     01A9  1D03               	skipz
   464     01AA  29AD               	goto	u705
   465     01AB  3005               	movlw	5
   466     01AC  0241               	subwf	_buttonclicks,w	;volatile
   467     01AD                     u705:
   468     01AD  1C03               	skipc
   469     01AE  29B0               	goto	u701
   470     01AF  29B1               	goto	u700
   471     01B0                     u701:
   472     01B0  29B6               	goto	l976
   473     01B1                     u700:
   474     01B1                     l974:
   475                           
   476                           ;main.c: 240:                     buttonclicks = 4;
   477     01B1  3004               	movlw	4
   478     01B2  1283               	bcf	3,5	;RP0=0, select bank0
   479     01B3  00C1               	movwf	_buttonclicks	;volatile
   480     01B4  3000               	movlw	0
   481     01B5  00C2               	movwf	_buttonclicks+1	;volatile
   482     01B6                     l976:
   483                           
   484                           ;main.c: 245:             if (enterbuttontimercounter == 1) {
   485     01B6  1283               	bcf	3,5	;RP0=0, select bank0
   486     01B7  033D               	decf	_enterbuttontimercounter,w	;volatile
   487     01B8  1D03               	btfss	3,2
   488     01B9  29BB               	goto	u711
   489     01BA  29BC               	goto	u710
   490     01BB                     u711:
   491     01BB  29DE               	goto	l990
   492     01BC                     u710:
   493     01BC                     l978:
   494                           
   495                           ;main.c: 246:                 buttontimercounter++;
   496     01BC  3001               	movlw	1
   497     01BD  07AC               	addwf	_buttontimercounter,f	;volatile
   498     01BE  1803               	skipnc
   499     01BF  0AAD               	incf	_buttontimercounter+1,f	;volatile
   500     01C0  3000               	movlw	0
   501     01C1  07AD               	addwf	_buttontimercounter+1,f	;volatile
   502     01C2                     l980:
   503                           
   504                           ;main.c: 247:                 if (buttontimercounter > 15) {
   505     01C2  082D               	movf	_buttontimercounter+1,w	;volatile
   506     01C3  3A80               	xorlw	128
   507     01C4  00DF               	movwf	btemp+1
   508     01C5  3080               	movlw	128
   509     01C6  025F               	subwf	btemp+1,w
   510     01C7  1D03               	skipz
   511     01C8  29CB               	goto	u725
   512     01C9  3010               	movlw	16
   513     01CA  022C               	subwf	_buttontimercounter,w	;volatile
   514     01CB                     u725:
   515     01CB  1C03               	skipc
   516     01CC  29CE               	goto	u721
   517     01CD  29CF               	goto	u720
   518     01CE                     u721:
   519     01CE  29DE               	goto	l990
   520     01CF                     u720:
   521     01CF                     l982:
   522                           
   523                           ;main.c: 248:                     enterbuttontimercounter = 0;
   524     01CF  1283               	bcf	3,5	;RP0=0, select bank0
   525     01D0  01BD               	clrf	_enterbuttontimercounter	;volatile
   526                           
   527                           ;main.c: 249:                     buttontimercounter = 0;
   528     01D1  01AC               	clrf	_buttontimercounter	;volatile
   529     01D2  01AD               	clrf	_buttontimercounter+1	;volatile
   530     01D3                     l984:
   531                           
   532                           ;main.c: 250:                     processbuttonclicks = 2 * buttonclicks;
   533     01D3  1003               	clrc
   534     01D4  0D41               	rlf	_buttonclicks,w	;volatile
   535     01D5  00AE               	movwf	_processbuttonclicks	;volatile
   536     01D6  0D42               	rlf	_buttonclicks+1,w	;volatile
   537     01D7  00AF               	movwf	_processbuttonclicks+1	;volatile
   538     01D8                     l986:
   539                           
   540                           ;main.c: 251:                     timecontrol = buttonclicks;
   541     01D8  0841               	movf	_buttonclicks,w	;volatile
   542     01D9  00BB               	movwf	_timecontrol	;volatile
   543                           
   544                           ;main.c: 252:                     buttonclicks = 0;
   545     01DA  01C1               	clrf	_buttonclicks	;volatile
   546     01DB  01C2               	clrf	_buttonclicks+1	;volatile
   547     01DC                     l988:
   548                           
   549                           ;main.c: 253:                     canstartblinking = 1;
   550     01DC  3001               	movlw	1
   551     01DD  00BE               	movwf	_canstartblinking	;volatile
   552     01DE                     l990:
   553                           
   554                           ;main.c: 257:         if(adc_value <= 90 && adc_value > 20){
   555     01DE  3000               	movlw	0
   556     01DF  1283               	bcf	3,5	;RP0=0, select bank0
   557     01E0  0231               	subwf	_adc_value+1,w	;volatile
   558     01E1  305B               	movlw	91
   559     01E2  1903               	skipnz
   560     01E3  0230               	subwf	_adc_value,w	;volatile
   561     01E4  1803               	skipnc
   562     01E5  29E7               	goto	u731
   563     01E6  29E8               	goto	u730
   564     01E7                     u731:
   565     01E7  2960               	goto	l950
   566     01E8                     u730:
   567     01E8                     l992:
   568     01E8  3000               	movlw	0
   569     01E9  0231               	subwf	_adc_value+1,w	;volatile
   570     01EA  3015               	movlw	21
   571     01EB  1903               	skipnz
   572     01EC  0230               	subwf	_adc_value,w	;volatile
   573     01ED  1C03               	skipc
   574     01EE  29F0               	goto	u741
   575     01EF  29F1               	goto	u740
   576     01F0                     u741:
   577     01F0  2960               	goto	l950
   578     01F1                     u740:
   579     01F1                     l994:
   580                           
   581                           ;main.c: 258:             starttimer= 0;
   582     01F1  01BC               	clrf	_starttimer	;volatile
   583                           
   584                           ;main.c: 259:             canstartblinking= 0;
   585     01F2  01BE               	clrf	_canstartblinking	;volatile
   586                           
   587                           ;main.c: 260:             buttontimercounter= 0;
   588     01F3  01AC               	clrf	_buttontimercounter	;volatile
   589     01F4  01AD               	clrf	_buttontimercounter+1	;volatile
   590                           
   591                           ;main.c: 261:             processbuttonclicks= 0;
   592     01F5  01AE               	clrf	_processbuttonclicks	;volatile
   593     01F6  01AF               	clrf	_processbuttonclicks+1	;volatile
   594                           
   595                           ;main.c: 262:             buttonclicks= 0;
   596     01F7  01C1               	clrf	_buttonclicks	;volatile
   597     01F8  01C2               	clrf	_buttonclicks+1	;volatile
   598                           
   599                           ;main.c: 263:             processbuttonclicks= 0;
   600     01F9  01AE               	clrf	_processbuttonclicks	;volatile
   601     01FA  01AF               	clrf	_processbuttonclicks+1	;volatile
   602                           
   603                           ;main.c: 264:             finalbuzzer= 0;
   604     01FB  01BA               	clrf	_finalbuzzer	;volatile
   605     01FC  2960               	goto	l950
   606     01FD  280D               	ljmp	start
   607     01FE                     __end_of_main:
   608                           
   609                           	psect	text1
   610     01FE                     __ptext1:	
   611 ;; *************** function _Read_Adc *****************
   612 ;; Defined at:
   613 ;;		line 52 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  2    5[BANK0 ] unsigned int 
   620 ;; Registers used:
   621 ;;		wreg
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0
   627 ;;      Params:         0       2
   628 ;;      Locals:         0       0
   629 ;;      Temps:          0       0
   630 ;;      Totals:         0       2
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641     01FE                     _Read_Adc:	
   642                           ;psect for function _Read_Adc
   643                           
   644     01FE                     l836:	
   645                           ;incstack = 0
   646                           ; Regs used in _Read_Adc: [wreg]
   647                           
   648                           
   649                           ;main.c: 53:                     finalbuzzer = 1;
   650     01FE  1283               	bcf	3,5	;RP0=0, select bank0
   651     01FF  149F               	bsf	31,1	;volatile
   652     0200                     l77:	
   653                           ;main.c: 54:                     processstarted = 0;
   654                           
   655     0200  189F               	btfsc	31,1	;volatile
   656     0201  2A03               	goto	u381
   657     0202  2A04               	goto	u380
   658     0203                     u381:
   659     0203  2A00               	goto	l77
   660     0204                     u380:
   661     0204                     l838:
   662                           
   663                           ;main.c: 56:                 }
   664     0204  081E               	movf	30,w	;volatile
   665     0205  00C9               	movwf	?_Read_Adc+1
   666     0206  1683               	bsf	3,5	;RP0=1, select bank1
   667     0207  081E               	movf	30,w	;volatile
   668     0208  1283               	bcf	3,5	;RP0=0, select bank0
   669     0209  00C8               	movwf	?_Read_Adc
   670     020A                     l80:
   671     020A  0008               	return
   672     020B                     __end_of_Read_Adc:
   673                           
   674                           	psect	text2
   675     0019                     __ptext2:	
   676 ;; *************** function _ISR *****************
   677 ;; Defined at:
   678 ;;		line 60 in file "main.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0, btemp+1
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0
   692 ;;      Params:         0       0
   693 ;;      Locals:         0       0
   694 ;;      Temps:          0       5
   695 ;;      Totals:         0       5
   696 ;;Total ram usage:        5 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		Interrupt level 1
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705     0019                     _ISR:	
   706                           ;psect for function _ISR
   707                           
   708     0019                     i1l842:
   709                           
   710                           ;main.c: 62: 
   711     0019  1D0B               	btfss	11,2	;volatile
   712     001A  281C               	goto	u39_21
   713     001B  281D               	goto	u39_20
   714     001C                     u39_21:
   715     001C  2942               	goto	i1l117
   716     001D                     u39_20:
   717     001D                     i1l844:
   718                           
   719                           ;main.c: 65:             canstartblinking = 0;
   720     001D  3001               	movlw	1
   721     001E  07B4               	addwf	_ledtimer,f	;volatile
   722     001F  1803               	skipnc
   723     0020  0AB5               	incf	_ledtimer+1,f	;volatile
   724     0021  3000               	movlw	0
   725     0022  07B5               	addwf	_ledtimer+1,f	;volatile
   726                           
   727                           ;main.c: 66:             if (finalbuzzercounter <= 3000) {
   728     0023  3001               	movlw	1
   729     0024  07B2               	addwf	_buttonstimer,f	;volatile
   730     0025  1803               	skipnc
   731     0026  0AB3               	incf	_buttonstimer+1,f	;volatile
   732     0027  3000               	movlw	0
   733     0028  07B3               	addwf	_buttonstimer+1,f	;volatile
   734     0029                     i1l846:
   735                           
   736                           ;main.c: 69:                 buzzeron = 0;
   737     0029  033C               	decf	_starttimer,w	;volatile
   738     002A  1D03               	btfss	3,2
   739     002B  282D               	goto	u40_21
   740     002C  282E               	goto	u40_20
   741     002D                     u40_21:
   742     002D  286C               	goto	i1l866
   743     002E                     u40_20:
   744     002E                     i1l848:
   745                           
   746                           ;main.c: 70: 
   747     002E  3001               	movlw	1
   748     002F  07AA               	addwf	_counttime,f	;volatile
   749     0030  1803               	skipnc
   750     0031  0AAB               	incf	_counttime+1,f	;volatile
   751     0032  3000               	movlw	0
   752     0033  07AB               	addwf	_counttime+1,f	;volatile
   753     0034                     i1l850:
   754                           
   755                           ;main.c: 72: 
   756     0034  082A               	movf	_counttime,w	;volatile
   757     0035  024A               	subwf	_finalquantity,w	;volatile
   758     0036  00C3               	movwf	??_ISR
   759     0037  082B               	movf	_counttime+1,w	;volatile
   760     0038  1C03               	skipc
   761     0039  0A2B               	incf	_counttime+1,w	;volatile
   762     003A  024B               	subwf	_finalquantity+1,w	;volatile
   763     003B  00C4               	movwf	??_ISR+1
   764     003C  0844               	movf	??_ISR+1,w
   765     003D  3A80               	xorlw	128
   766     003E  00DF               	movwf	btemp+1
   767     003F  3080               	movlw	128
   768     0040  025F               	subwf	btemp+1,w
   769     0041  1D03               	skipz
   770     0042  2845               	goto	u41_25
   771     0043  3001               	movlw	1
   772     0044  0243               	subwf	??_ISR,w
   773     0045                     u41_25:
   774     0045  1803               	skipnc
   775     0046  2848               	goto	u41_21
   776     0047  2849               	goto	u41_20
   777     0048                     u41_21:
   778     0048  286C               	goto	i1l866
   779     0049                     u41_20:
   780     0049                     i1l852:
   781                           
   782                           ;main.c: 73: 
   783     0049  1283               	bcf	3,5	;RP0=0, select bank0
   784     004A  01AA               	clrf	_counttime	;volatile
   785     004B  01AB               	clrf	_counttime+1	;volatile
   786     004C                     i1l854:
   787                           
   788                           ;main.c: 74: 
   789     004C  3001               	movlw	1
   790     004D  07A4               	addwf	_longtimecounter,f	;volatile
   791     004E  1803               	skipnc
   792     004F  0AA5               	incf	_longtimecounter+1,f	;volatile
   793     0050  3000               	movlw	0
   794     0051  07A5               	addwf	_longtimecounter+1,f	;volatile
   795     0052                     i1l856:
   796                           
   797                           ;main.c: 75:                 processbuttonclicks = 0;
   798     0052  0825               	movf	_longtimecounter+1,w	;volatile
   799     0053  3A80               	xorlw	128
   800     0054  00DF               	movwf	btemp+1
   801     0055  3080               	movlw	128
   802     0056  025F               	subwf	btemp+1,w
   803     0057  1D03               	skipz
   804     0058  285B               	goto	u42_25
   805     0059  3090               	movlw	144
   806     005A  0224               	subwf	_longtimecounter,w	;volatile
   807     005B                     u42_25:
   808     005B  1C03               	skipc
   809     005C  285E               	goto	u42_21
   810     005D  285F               	goto	u42_20
   811     005E                     u42_21:
   812     005E  286C               	goto	i1l866
   813     005F                     u42_20:
   814     005F                     i1l858:
   815                           
   816                           ;main.c: 76:                 processstarted = 0;
   817     005F  1283               	bcf	3,5	;RP0=0, select bank0
   818     0060  01CA               	clrf	_finalquantity	;volatile
   819     0061  01CB               	clrf	_finalquantity+1	;volatile
   820                           
   821                           ;main.c: 77:                 finalbuzzercounter = 0;
   822     0062  01BC               	clrf	_starttimer	;volatile
   823     0063                     i1l860:
   824                           
   825                           ;main.c: 79:             }
   826     0063  0338               	decf	_processstarted,w	;volatile
   827     0064  1D03               	btfss	3,2
   828     0065  2867               	goto	u43_21
   829     0066  2868               	goto	u43_20
   830     0067                     u43_21:
   831     0067  286C               	goto	i1l87
   832     0068                     u43_20:
   833     0068                     i1l862:
   834                           
   835                           ;main.c: 80:         }
   836     0068  3001               	movlw	1
   837     0069  00BA               	movwf	_finalbuzzer	;volatile
   838     006A                     i1l864:
   839                           
   840                           ;main.c: 81: 
   841     006A  01B8               	clrf	_processstarted	;volatile
   842     006B  286C               	goto	i1l866
   843     006C                     i1l87:	
   844                           ;main.c: 86:                 start = 0;
   845                           
   846     006C                     i1l866:
   847                           
   848                           ;main.c: 90:                 buzzeron= 1;
   849     006C  1283               	bcf	3,5	;RP0=0, select bank0
   850     006D  033A               	decf	_finalbuzzer,w	;volatile
   851     006E  1D03               	btfss	3,2
   852     006F  2871               	goto	u44_21
   853     0070  2872               	goto	u44_20
   854     0071                     u44_21:
   855     0071  2894               	goto	i1l880
   856     0072                     u44_20:
   857     0072                     i1l868:
   858                           
   859                           ;main.c: 91:             }
   860     0072  3001               	movlw	1
   861     0073  07A6               	addwf	_finalbuzzercounter,f	;volatile
   862     0074  1803               	skipnc
   863     0075  0AA7               	incf	_finalbuzzercounter+1,f	;volatile
   864     0076  3000               	movlw	0
   865     0077  07A7               	addwf	_finalbuzzercounter+1,f	;volatile
   866     0078                     i1l870:
   867                           
   868                           ;main.c: 92:             ledtimer = 0;
   869     0078  01BE               	clrf	_canstartblinking	;volatile
   870     0079                     i1l872:
   871                           
   872                           ;main.c: 93:         } else if (processbuttonclicks <= 0 && canstartblinking == 1) {
   873     0079  0827               	movf	_finalbuzzercounter+1,w	;volatile
   874     007A  3A80               	xorlw	128
   875     007B  00DF               	movwf	btemp+1
   876     007C  308B               	movlw	139
   877     007D  025F               	subwf	btemp+1,w
   878     007E  1D03               	skipz
   879     007F  2882               	goto	u45_25
   880     0080  30B9               	movlw	185
   881     0081  0226               	subwf	_finalbuzzercounter,w	;volatile
   882     0082                     u45_25:
   883     0082  1803               	skipnc
   884     0083  2885               	goto	u45_21
   885     0084  2886               	goto	u45_20
   886     0085                     u45_21:
   887     0085  288A               	goto	i1l876
   888     0086                     u45_20:
   889     0086                     i1l874:
   890                           
   891                           ;main.c: 94: 
   892     0086  3001               	movlw	1
   893     0087  1283               	bcf	3,5	;RP0=0, select bank0
   894     0088  00B9               	movwf	_buzzeron	;volatile
   895                           
   896                           ;main.c: 95:             if (timecontrol == 4) {
   897     0089  2894               	goto	i1l880
   898     008A                     i1l876:
   899                           
   900                           ;main.c: 96:                 finalquantity = 30000;
   901     008A  1283               	bcf	3,5	;RP0=0, select bank0
   902     008B  01B9               	clrf	_buzzeron	;volatile
   903     008C                     i1l878:
   904                           
   905                           ;main.c: 98:                 finalquantity = 22500;
   906     008C  3001               	movlw	1
   907     008D  00BC               	movwf	_starttimer	;volatile
   908                           
   909                           ;main.c: 102:                 finalquantity = 7500;
   910     008E  01AE               	clrf	_processbuttonclicks	;volatile
   911     008F  01AF               	clrf	_processbuttonclicks+1	;volatile
   912                           
   913                           ;main.c: 103:             } else {
   914     0090  01B8               	clrf	_processstarted	;volatile
   915                           
   916                           ;main.c: 104:                 finalquantity = 0;
   917     0091  01A6               	clrf	_finalbuzzercounter	;volatile
   918     0092  01A7               	clrf	_finalbuzzercounter+1	;volatile
   919                           
   920                           ;main.c: 105:             }
   921     0093  01BA               	clrf	_finalbuzzer	;volatile
   922     0094                     i1l880:
   923                           
   924                           ;main.c: 110:             }
   925     0094  0835               	movf	_ledtimer+1,w	;volatile
   926     0095  3A80               	xorlw	128
   927     0096  00DF               	movwf	btemp+1
   928     0097  3080               	movlw	128
   929     0098  025F               	subwf	btemp+1,w
   930     0099  1D03               	skipz
   931     009A  289D               	goto	u46_25
   932     009B  30C8               	movlw	200
   933     009C  0234               	subwf	_ledtimer,w	;volatile
   934     009D                     u46_25:
   935     009D  1C03               	skipc
   936     009E  28A0               	goto	u46_21
   937     009F  28A1               	goto	u46_20
   938     00A0                     u46_21:
   939     00A0  28CA               	goto	i1l894
   940     00A1                     u46_20:
   941     00A1                     i1l882:
   942     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   943     00A2  082F               	movf	_processbuttonclicks+1,w	;volatile
   944     00A3  3A80               	xorlw	128
   945     00A4  00DF               	movwf	btemp+1
   946     00A5  3080               	movlw	128
   947     00A6  025F               	subwf	btemp+1,w
   948     00A7  1D03               	skipz
   949     00A8  28AB               	goto	u47_25
   950     00A9  3001               	movlw	1
   951     00AA  022E               	subwf	_processbuttonclicks,w	;volatile
   952     00AB                     u47_25:
   953     00AB  1C03               	skipc
   954     00AC  28AE               	goto	u47_21
   955     00AD  28AF               	goto	u47_20
   956     00AE                     u47_21:
   957     00AE  28CA               	goto	i1l894
   958     00AF                     u47_20:
   959     00AF                     i1l884:
   960     00AF  1283               	bcf	3,5	;RP0=0, select bank0
   961     00B0  033E               	decf	_canstartblinking,w	;volatile
   962     00B1  1D03               	btfss	3,2
   963     00B2  28B4               	goto	u48_21
   964     00B3  28B5               	goto	u48_20
   965     00B4                     u48_21:
   966     00B4  28CA               	goto	i1l894
   967     00B5                     u48_20:
   968     00B5                     i1l886:
   969                           
   970                           ;main.c: 111:         }
   971     00B5  30FF               	movlw	255
   972     00B6  07AE               	addwf	_processbuttonclicks,f	;volatile
   973     00B7  1803               	skipnc
   974     00B8  0AAF               	incf	_processbuttonclicks+1,f	;volatile
   975     00B9  30FF               	movlw	255
   976     00BA  07AF               	addwf	_processbuttonclicks+1,f	;volatile
   977     00BB                     i1l888:
   978                           
   979                           ;main.c: 112: 
   980     00BB  0340               	decf	_start,w	;volatile
   981     00BC  1D03               	btfss	3,2
   982     00BD  28BF               	goto	u49_21
   983     00BE  28C0               	goto	u49_20
   984     00BF                     u49_21:
   985     00BF  28C3               	goto	i1l94
   986     00C0                     u49_20:
   987     00C0                     i1l890:
   988                           
   989                           ;main.c: 113: 
   990     00C0  01C0               	clrf	_start	;volatile
   991                           
   992                           ;main.c: 114:         if ((start == 1 && starttimer == 0) || (starttimer == 1 && finalqu
      +                          antity != 0) || buzzeron == 1) {
   993     00C1  01B9               	clrf	_buzzeron	;volatile
   994                           
   995                           ;main.c: 115: 
   996     00C2  28C7               	goto	i1l892
   997     00C3                     i1l94:
   998                           
   999                           ;main.c: 116:             GP5 = 1;
  1000     00C3  3001               	movlw	1
  1001     00C4  00C0               	movwf	_start	;volatile
  1002                           
  1003                           ;main.c: 117: 
  1004     00C5  3001               	movlw	1
  1005     00C6  00B9               	movwf	_buzzeron	;volatile
  1006     00C7                     i1l892:
  1007                           
  1008                           ;main.c: 119:                 GP2 = 1;
  1009     00C7  01B4               	clrf	_ledtimer	;volatile
  1010     00C8  01B5               	clrf	_ledtimer+1	;volatile
  1011                           
  1012                           ;main.c: 120:             } else {
  1013     00C9  2918               	goto	i1l924
  1014     00CA                     i1l894:
  1015     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1016     00CB  082F               	movf	_processbuttonclicks+1,w	;volatile
  1017     00CC  3A80               	xorlw	128
  1018     00CD  00DF               	movwf	btemp+1
  1019     00CE  3080               	movlw	128
  1020     00CF  025F               	subwf	btemp+1,w
  1021     00D0  1D03               	skipz
  1022     00D1  28D4               	goto	u50_25
  1023     00D2  3001               	movlw	1
  1024     00D3  022E               	subwf	_processbuttonclicks,w	;volatile
  1025     00D4                     u50_25:
  1026     00D4  1803               	skipnc
  1027     00D5  28D7               	goto	u50_21
  1028     00D6  28D8               	goto	u50_20
  1029     00D7                     u50_21:
  1030     00D7  2918               	goto	i1l924
  1031     00D8                     u50_20:
  1032     00D8                     i1l896:
  1033     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1034     00D9  033E               	decf	_canstartblinking,w	;volatile
  1035     00DA  1D03               	btfss	3,2
  1036     00DB  28DD               	goto	u51_21
  1037     00DC  28DE               	goto	u51_20
  1038     00DD                     u51_21:
  1039     00DD  2918               	goto	i1l924
  1040     00DE                     u51_20:
  1041     00DE                     i1l898:
  1042                           
  1043                           ;main.c: 122:             }
  1044     00DE  3004               	movlw	4
  1045     00DF  063B               	xorwf	_timecontrol,w	;volatile
  1046     00E0  1D03               	btfss	3,2
  1047     00E1  28E3               	goto	u52_21
  1048     00E2  28E4               	goto	u52_20
  1049     00E3                     u52_21:
  1050     00E3  28E9               	goto	i1l902
  1051     00E4                     u52_20:
  1052     00E4                     i1l900:
  1053                           
  1054                           ;main.c: 123:         } else {
  1055     00E4  3030               	movlw	48
  1056     00E5  00CA               	movwf	_finalquantity	;volatile
  1057     00E6  3075               	movlw	117
  1058     00E7  00CB               	movwf	_finalquantity+1	;volatile
  1059                           
  1060                           ;main.c: 124: 
  1061     00E8  290B               	goto	i1l916
  1062     00E9                     i1l902:
  1063     00E9  3003               	movlw	3
  1064     00EA  063B               	xorwf	_timecontrol,w	;volatile
  1065     00EB  1D03               	btfss	3,2
  1066     00EC  28EE               	goto	u53_21
  1067     00ED  28EF               	goto	u53_20
  1068     00EE                     u53_21:
  1069     00EE  28F4               	goto	i1l906
  1070     00EF                     u53_20:
  1071     00EF                     i1l904:
  1072                           
  1073                           ;main.c: 125:             GP5 = 0;
  1074     00EF  30E4               	movlw	228
  1075     00F0  00CA               	movwf	_finalquantity	;volatile
  1076     00F1  3057               	movlw	87
  1077     00F2  00CB               	movwf	_finalquantity+1	;volatile
  1078                           
  1079                           ;main.c: 126:             GP2 = 0;
  1080     00F3  290B               	goto	i1l916
  1081     00F4                     i1l906:
  1082     00F4  3002               	movlw	2
  1083     00F5  063B               	xorwf	_timecontrol,w	;volatile
  1084     00F6  1D03               	btfss	3,2
  1085     00F7  28F9               	goto	u54_21
  1086     00F8  28FA               	goto	u54_20
  1087     00F9                     u54_21:
  1088     00F9  28FF               	goto	i1l910
  1089     00FA                     u54_20:
  1090     00FA                     i1l908:
  1091                           
  1092                           ;main.c: 127:         }
  1093     00FA  3098               	movlw	152
  1094     00FB  00CA               	movwf	_finalquantity	;volatile
  1095     00FC  303A               	movlw	58
  1096     00FD  00CB               	movwf	_finalquantity+1	;volatile
  1097                           
  1098                           ;main.c: 128: 
  1099     00FE  290B               	goto	i1l916
  1100     00FF                     i1l910:
  1101     00FF  033B               	decf	_timecontrol,w	;volatile
  1102     0100  1D03               	btfss	3,2
  1103     0101  2903               	goto	u55_21
  1104     0102  2904               	goto	u55_20
  1105     0103                     u55_21:
  1106     0103  2909               	goto	i1l914
  1107     0104                     u55_20:
  1108     0104                     i1l912:
  1109                           
  1110                           ;main.c: 129:         T0IF = 0;
  1111     0104  304C               	movlw	76
  1112     0105  00CA               	movwf	_finalquantity	;volatile
  1113     0106  301D               	movlw	29
  1114     0107  00CB               	movwf	_finalquantity+1	;volatile
  1115                           
  1116                           ;main.c: 130:         TMR0 = 6;
  1117     0108  290B               	goto	i1l916
  1118     0109                     i1l914:
  1119                           
  1120                           ;main.c: 131:     }
  1121     0109  01CA               	clrf	_finalquantity	;volatile
  1122     010A  01CB               	clrf	_finalquantity+1	;volatile
  1123     010B                     i1l916:
  1124                           
  1125                           ;main.c: 134: 
  1126     010B  083C               	movf	_starttimer,w	;volatile
  1127     010C  1D03               	btfss	3,2
  1128     010D  290F               	goto	u56_21
  1129     010E  2910               	goto	u56_20
  1130     010F                     u56_21:
  1131     010F  2918               	goto	i1l924
  1132     0110                     u56_20:
  1133     0110                     i1l918:
  1134     0110  083A               	movf	_finalbuzzer,w	;volatile
  1135     0111  1D03               	btfss	3,2
  1136     0112  2914               	goto	u57_21
  1137     0113  2915               	goto	u57_20
  1138     0114                     u57_21:
  1139     0114  2918               	goto	i1l924
  1140     0115                     u57_20:
  1141     0115                     i1l920:
  1142                           
  1143                           ;main.c: 135: void main(void) {
  1144     0115  3001               	movlw	1
  1145     0116  00BC               	movwf	_starttimer	;volatile
  1146     0117                     i1l922:
  1147                           
  1148                           ;main.c: 136: 
  1149     0117  01BE               	clrf	_canstartblinking	;volatile
  1150     0118                     i1l924:
  1151     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1152     0119  0340               	decf	_start,w	;volatile
  1153     011A  1D03               	btfss	3,2
  1154     011B  291D               	goto	u58_21
  1155     011C  291E               	goto	u58_20
  1156     011D                     u58_21:
  1157     011D  2923               	goto	i1l928
  1158     011E                     u58_20:
  1159     011E                     i1l926:
  1160     011E  083C               	movf	_starttimer,w	;volatile
  1161     011F  1903               	btfsc	3,2
  1162     0120  2922               	goto	u59_21
  1163     0121  2923               	goto	u59_20
  1164     0122                     u59_21:
  1165     0122  2933               	goto	i1l109
  1166     0123                     u59_20:
  1167     0123                     i1l928:
  1168     0123  033C               	decf	_starttimer,w	;volatile
  1169     0124  1D03               	btfss	3,2
  1170     0125  2927               	goto	u60_21
  1171     0126  2928               	goto	u60_20
  1172     0127                     u60_21:
  1173     0127  292E               	goto	i1l932
  1174     0128                     u60_20:
  1175     0128                     i1l930:
  1176     0128  084A               	movf	_finalquantity,w	;volatile
  1177     0129  044B               	iorwf	_finalquantity+1,w	;volatile
  1178     012A  1D03               	btfss	3,2
  1179     012B  292D               	goto	u61_21
  1180     012C  292E               	goto	u61_20
  1181     012D                     u61_21:
  1182     012D  2933               	goto	i1l109
  1183     012E                     u61_20:
  1184     012E                     i1l932:
  1185     012E  0339               	decf	_buzzeron,w	;volatile
  1186     012F  1D03               	btfss	3,2
  1187     0130  2932               	goto	u62_21
  1188     0131  2933               	goto	u62_20
  1189     0132                     u62_21:
  1190     0132  293D               	goto	i1l107
  1191     0133                     u62_20:
  1192     0133                     i1l109:
  1193     0133  1685               	bsf	5,5	;volatile
  1194     0134                     i1l934:
  1195     0134  0339               	decf	_buzzeron,w	;volatile
  1196     0135  1D03               	btfss	3,2
  1197     0136  2938               	goto	u63_21
  1198     0137  2939               	goto	u63_20
  1199     0138                     u63_21:
  1200     0138  293B               	goto	i1l114
  1201     0139                     u63_20:
  1202     0139                     i1l936:
  1203     0139  1505               	bsf	5,2	;volatile
  1204     013A  293F               	goto	i1l116
  1205     013B                     i1l114:
  1206     013B  1105               	bcf	5,2	;volatile
  1207     013C  293F               	goto	i1l116
  1208     013D                     i1l107:
  1209     013D  1285               	bcf	5,5	;volatile
  1210     013E  1105               	bcf	5,2	;volatile
  1211     013F                     i1l116:
  1212     013F  110B               	bcf	11,2	;volatile
  1213     0140  3006               	movlw	6
  1214     0141  0081               	movwf	1	;volatile
  1215     0142                     i1l117:
  1216     0142  0847               	movf	??_ISR+4,w
  1217     0143  0846               	movf	??_ISR+3,w
  1218     0144  008A               	movwf	10
  1219     0145  0E45               	swapf	??_ISR+2,w
  1220     0146  0083               	movwf	3
  1221     0147  0EDE               	swapf	btemp,f
  1222     0148  0E5E               	swapf	btemp,w
  1223     0149  0009               	retfie
  1224     014A                     __end_of_ISR:
  1225     0000                     ___latbits      equ	0
  1226     005E                     btemp           set	94	;btemp
  1227     005E                     wtemp0          set	94
  1228                           
  1229                           	psect	intentry
  1230     0004                     __pintentry:	
  1231                           ;incstack = 0
  1232                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  1233                           
  1234     0004                     interrupt_function:
  1235     005E                     saved_w         set	btemp
  1236     0004  00DE               	movwf	btemp
  1237     0005  0E03               	swapf	3,w
  1238     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1239     0007  00C5               	movwf	??_ISR+2
  1240     0008  080A               	movf	10,w
  1241     0009  00C6               	movwf	??_ISR+3
  1242     000A  085F               	movf	btemp+1,w
  1243     000B  00C7               	movwf	??_ISR+4
  1244     000C  2819               	ljmp	_ISR
  1245                           
  1246                           	psect	config
  1247                           
  1248                           ;Config register CONFIG @ 0x2007
  1249                           ;	Oscillator Selection bits
  1250                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1251                           ;	Watchdog Timer Enable bit
  1252                           ;	WDTE = OFF, WDT disabled
  1253                           ;	Power-Up Timer Enable bit
  1254                           ;	PWRTE = OFF, PWRT disabled
  1255                           ;	GP3/MCLR pin function select
  1256                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  1257                           ;	Brown-out Detect Enable bit
  1258                           ;	BOREN = OFF, BOD disabled
  1259                           ;	Code Protection bit
  1260                           ;	CP = OFF, Program Memory code protection is disabled
  1261                           ;	Data Code Protection bit
  1262                           ;	CPD = OFF, Data memory code protection is disabled
  1263     2007                     	org	8199
  1264     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7      44

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Read_Adc

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Read_Adc
 ---------------------------------------------------------------------------------
 (1) _Read_Adc                                             2     0      2       0
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_Adc

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK0               62      7      44     71.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BITCOMMON            0      0       0      0.0%
DATA                 0      0      44      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Jul 12 15:20:46 2025

                     l80 020A                       l77 0200                       fsr 0004  
                    l836 01FE                      l940 0153                      l838 0204  
                    l950 0160                      l942 0157                      l960 0189  
                    l952 016E                      l944 015A                      l970 01A1  
                    l962 018E                      l954 0171                      l946 015C  
                    l938 014A                      l980 01C2                      l972 01A4  
                    l964 0193                      l956 0177                      l948 015E  
                    l982 01CF                      l974 01B1                      l966 0199  
                    l958 0180                      l990 01DE                      _GP2 002A  
                    l992 01E8                      l984 01D3                      l968 019B  
                    l976 01B6                      _GP5 002D                      l994 01F1  
                    l986 01D8                      l978 01BC                      l988 01DC  
                    u380 0204                      u700 01B1                      _ISR 0019  
                    u381 0203                      u701 01B0                      u710 01BC  
                    u711 01BB                      u720 01CF                      u640 016E  
                    u721 01CE                      u705 01AD                      u641 016D  
                    u730 01E8                      u650 0180                      u731 01E7  
                    u651 017F                      u740 01F1                      u660 0189  
                    u741 01F0                      u725 01CB                      u661 0188  
                    u645 016A                      u670 018E                      u671 018D  
                    u680 0193                      u681 0192                      u690 01A1  
                    u691 01A0       _buttontimercounter 002C                      _WPU 0095  
                    indf 0000              _startbutton 003F                     ?_ISR 0043  
                   _T0IF 005A                     i1l94 00C3                     i1l87 006C  
                   _TMR0 0001                     _main 014A                     btemp 005E  
                   start 000D                    ??_ISR 0043                    ?_main 0043  
                  _CMCON 0019                    _ANSEL 009F                    i1l114 013B  
                  i1l107 013D                    i1l116 013F                    i1l109 0133  
                  i1l117 0142                    i1l900 00E4                    i1l910 00FF  
                  i1l902 00E9                    i1l920 0115                    i1l912 0104  
                  i1l904 00EF                    i1l930 0128                    i1l922 0117  
                  i1l914 0109                    i1l906 00F4                    i1l850 0034  
                  i1l842 0019                    i1l932 012E                    i1l908 00FA  
                  i1l916 010B                    i1l924 0118                    i1l860 0063  
                  i1l852 0049                    i1l844 001D                    i1l934 0134  
                  i1l926 011E                    i1l918 0110                    i1l870 0078  
                  i1l862 0068                    i1l854 004C                    i1l846 0029  
                  i1l936 0139                    i1l928 0123                    i1l872 0079  
                  i1l880 0094                    i1l864 006A                    i1l856 0052  
                  i1l848 002E                    i1l890 00C0                    i1l882 00A1  
                  i1l874 0086                    i1l858 005F                    i1l866 006C  
                  i1l892 00C7                    i1l884 00AF                    i1l876 008A  
                  i1l868 0072                    i1l886 00B5                    i1l894 00CA  
                  i1l878 008C                    i1l896 00D8                    i1l888 00BB  
                  i1l898 00DE                    u40_20 002E                    u40_21 002D  
                  u41_20 0049                    u41_21 0048                    u41_25 0045  
                  u50_20 00D8                    u42_20 005F                    u50_21 00D7  
                  u42_21 005E                    u50_25 00D4                    u42_25 005B  
                  u51_20 00DE                    u43_20 0068                    u51_21 00DD  
                  u43_21 0067                    u60_20 0128                    u52_20 00E4  
                  u44_20 0072                    u60_21 0127                    u52_21 00E3  
                  u44_21 0071                    u61_20 012E                    u53_20 00EF  
                  u45_20 0086                    u61_21 012D                    u53_21 00EE  
                  u45_21 0085                    u45_25 0082                    u62_20 0133  
                  u54_20 00FA                    u46_20 00A1                    u62_21 0132  
                  u54_21 00F9                    u46_21 00A0                    u46_25 009D  
                  u63_20 0139                    u55_20 0104                    u47_20 00AF  
                  u39_20 001D                    u63_21 0138                    u55_21 0103  
                  u47_21 00AE                    u39_21 001C                    u47_25 00AB  
                  u56_20 0110                    u48_20 00B5                    u56_21 010F  
                  u48_21 00B4                    u57_20 0115                    u49_20 00C0  
                  u57_21 0114                    u49_21 00BF                    u58_20 011E  
                  u58_21 011D                    u59_20 0123                    u59_21 0122  
                  _start 0040                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000E             __end_of_main 01FE  
       __end_of_Read_Adc 020B             _supercounter 0028                   ??_main 0000  
                 _ADCON0 001F                   _ADRESH 001E                   _ADRESL 009E  
                 _INTCON 000B                   _OSCCAL 0090                   _TRISIO 0085  
                 saved_w 005E  __end_of__initialization 0017           __pcstackCOMMON 0000  
           __pidataBANK0 0213               __pbssBANK0 0020                ?_Read_Adc 0048  
             __pmaintext 014A               __pintentry 0004            _buttonpressed 0036  
             ??_Read_Adc 0000                  __ptext1 01FE                  __ptext2 0019  
        _longtimecounter 0024                  clrloop0 020C     end_of_initialization 0017  
_enterbuttontimercounter 003D       _finalbuzzercounter 0026               _starttimer 003C  
    _processbuttonclicks 002E      start_initialization 000E              __end_of_ISR 014A  
            __pdataBANK0 004A                ___latbits 0000            __pcstackBANK0 0043  
              _adc_value 0030             _buttonclicks 0041             _buttonstimer 0032  
              _counttime 002A        interrupt_function 0004                clear_ram0 020B  
            _finalbuzzer 003A                _tempo_led 0020               _ADCON0bits 001F  
               _Read_Adc 01FE                 _ledtimer 0034                 _buzzeron 0039  
         _processstarted 0038                 intlevel1 0000            _finalquantity 004A  
             _OPTION_REG 0081         _canstartblinking 003E              _timecontrol 003B  
