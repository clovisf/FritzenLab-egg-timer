

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Aug 08 22:41:46 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,space=0,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x5E,2
    17     0000                     
    18                           ; Generated 17/08/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F675 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0004                     fsr             equ	4
    53     0004                     fsr0            equ	4
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0000                     INDF            equ	0	;# 
    61     0001                     TMR0            equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR             equ	4	;# 
    65     0005                     GPIO            equ	5	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0019                     CMCON           equ	25	;# 
    74     001E                     ADRESH          equ	30	;# 
    75     001F                     ADCON0          equ	31	;# 
    76     0081                     OPTION_REG      equ	129	;# 
    77     0085                     TRISIO          equ	133	;# 
    78     008C                     PIE1            equ	140	;# 
    79     008E                     PCON            equ	142	;# 
    80     0090                     OSCCAL          equ	144	;# 
    81     0095                     WPU             equ	149	;# 
    82     0096                     IOC             equ	150	;# 
    83     0096                     IOCB            equ	150	;# 
    84     0099                     VRCON           equ	153	;# 
    85     009A                     EEDATA          equ	154	;# 
    86     009A                     EEDAT           equ	154	;# 
    87     009B                     EEADR           equ	155	;# 
    88     009C                     EECON1          equ	156	;# 
    89     009D                     EECON2          equ	157	;# 
    90     009E                     ADRESL          equ	158	;# 
    91     009F                     ANSEL           equ	159	;# 
    92     0000                     INDF            equ	0	;# 
    93     0001                     TMR0            equ	1	;# 
    94     0002                     PCL             equ	2	;# 
    95     0003                     STATUS          equ	3	;# 
    96     0004                     FSR             equ	4	;# 
    97     0005                     GPIO            equ	5	;# 
    98     000A                     PCLATH          equ	10	;# 
    99     000B                     INTCON          equ	11	;# 
   100     000C                     PIR1            equ	12	;# 
   101     000E                     TMR1            equ	14	;# 
   102     000E                     TMR1L           equ	14	;# 
   103     000F                     TMR1H           equ	15	;# 
   104     0010                     T1CON           equ	16	;# 
   105     0019                     CMCON           equ	25	;# 
   106     001E                     ADRESH          equ	30	;# 
   107     001F                     ADCON0          equ	31	;# 
   108     0081                     OPTION_REG      equ	129	;# 
   109     0085                     TRISIO          equ	133	;# 
   110     008C                     PIE1            equ	140	;# 
   111     008E                     PCON            equ	142	;# 
   112     0090                     OSCCAL          equ	144	;# 
   113     0095                     WPU             equ	149	;# 
   114     0096                     IOC             equ	150	;# 
   115     0096                     IOCB            equ	150	;# 
   116     0099                     VRCON           equ	153	;# 
   117     009A                     EEDATA          equ	154	;# 
   118     009A                     EEDAT           equ	154	;# 
   119     009B                     EEADR           equ	155	;# 
   120     009C                     EECON1          equ	156	;# 
   121     009D                     EECON2          equ	157	;# 
   122     009E                     ADRESL          equ	158	;# 
   123     009F                     ANSEL           equ	159	;# 
   124                           
   125                           	psect	idataBANK0
   126     0241                     __pidataBANK0:
   127                           
   128                           ;initializer for _finalquantity
   129     0241  34D0               	retlw	208
   130     0242  3407               	retlw	7
   131     000B                     _INTCON         set	11
   132     001F                     _ADCON0         set	31
   133     0019                     _CMCON          set	25
   134     0001                     _TMR0           set	1
   135     001E                     _ADRESH         set	30
   136     001F                     _ADCON0bits     set	31
   137     002A                     _GP2            set	42
   138     002D                     _GP5            set	45
   139     005A                     _T0IF           set	90
   140     0085                     _TRISIO         set	133
   141     0081                     _OPTION_REG     set	129
   142     0090                     _OSCCAL         set	144
   143     0095                     _WPU            set	149
   144     009F                     _ANSEL          set	159
   145     009E                     _ADRESL         set	158
   146                           
   147                           	psect	cinit
   148     000E                     start_initialization:	
   149                           ; #config settings
   150                           
   151     000E                     __initialization:
   152                           
   153                           ; Initialize objects allocated to BANK0
   154     000E  2241               	fcall	__pidataBANK0	;fetch initializer
   155     000F  00CC               	movwf	__pdataBANK0& (0+127)
   156     0010  2242               	fcall	__pidataBANK0+1	;fetch initializer
   157     0011  00CD               	movwf	(__pdataBANK0+1)& (0+127)
   158                           
   159                           ; Clear objects allocated to BANK0
   160     0012  1383               	bcf	3,7	;select IRP bank0
   161     0013  3020               	movlw	low __pbssBANK0
   162     0014  0084               	movwf	4
   163     0015  3045               	movlw	low (__pbssBANK0+37)
   164     0016  2239               	fcall	clear_ram0
   165     0017                     end_of_initialization:	
   166                           ;End of C runtime variable initialization code
   167                           
   168     0017                     __end_of__initialization:
   169     0017  0183               	clrf	3
   170     0018  294A               	ljmp	_main	;jump to C main() function
   171                           
   172                           	psect	bssBANK0
   173     0020                     __pbssBANK0:
   174     0020                     _tempo_led:
   175     0020                     	ds	4
   176     0024                     _dothemagicofreset:
   177     0024                     	ds	2
   178     0026                     _longtimecounter:
   179     0026                     	ds	2
   180     0028                     _finalbuzzercounter:
   181     0028                     	ds	2
   182     002A                     _supercounter:
   183     002A                     	ds	2
   184     002C                     _counttime:
   185     002C                     	ds	2
   186     002E                     _buttontimercounter:
   187     002E                     	ds	2
   188     0030                     _processbuttonclicks:
   189     0030                     	ds	2
   190     0032                     _adc_value:
   191     0032                     	ds	2
   192     0034                     _buttonstimer:
   193     0034                     	ds	2
   194     0036                     _ledtimer:
   195     0036                     	ds	2
   196     0038                     _buttonpressed:
   197     0038                     	ds	2
   198     003A                     _processstarted:
   199     003A                     	ds	1
   200     003B                     _buzzeron:
   201     003B                     	ds	1
   202     003C                     _finalbuzzer:
   203     003C                     	ds	1
   204     003D                     _timecontrol:
   205     003D                     	ds	1
   206     003E                     _starttimer:
   207     003E                     	ds	1
   208     003F                     _enterbuttontimercounter:
   209     003F                     	ds	1
   210     0040                     _canstartblinking:
   211     0040                     	ds	1
   212     0041                     _startbutton:
   213     0041                     	ds	1
   214     0042                     _start:
   215     0042                     	ds	1
   216     0043                     _buttonclicks:
   217     0043                     	ds	2
   218                           
   219                           	psect	dataBANK0
   220     004C                     __pdataBANK0:
   221     004C                     _finalquantity:
   222     004C                     	ds	2
   223                           
   224                           	psect	clrtext
   225     0239                     clear_ram0:	
   226                           ;	Called with FSR containing the base address, and
   227                           ;	W with the last address+1
   228                           
   229     0239  0064               	clrwdt	;clear the watchdog before getting into this loop
   230     023A                     clrloop0:
   231     023A  0180               	clrf	0	;clear RAM location pointed to by FSR
   232     023B  0A84               	incf	4,f	;increment pointer
   233     023C  0604               	xorwf	4,w	;XOR with final address
   234     023D  1903               	btfsc	3,2	;have we reached the end yet?
   235     023E  3400               	retlw	0	;all done for this memory range, return
   236     023F  0604               	xorwf	4,w	;XOR again to restore value
   237     0240  2A3A               	goto	clrloop0	;do the next byte
   238                           
   239                           	psect	cstackCOMMON
   240     0000                     __pcstackCOMMON:
   241     0000                     ??_Read_Adc:
   242     0000                     ??_main:	
   243                           ; 1 bytes @ 0x0
   244                           
   245                           
   246                           	psect	cstackBANK0
   247     0045                     __pcstackBANK0:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0045                     ?_ISR:
   251     0045                     ?_main:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0045                     ??_ISR:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259     0045                     	ds	5
   260     004A                     ?_Read_Adc:
   261                           
   262                           ; 2 bytes @ 0x5
   263     004A                     	ds	2
   264                           
   265                           	psect	maintext
   266     014A                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 166 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0
   286 ;;      Params:         0       0
   287 ;;      Locals:         0       0
   288 ;;      Temps:          0       0
   289 ;;      Totals:         0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels required when called: 2
   292 ;; This function calls:
   293 ;;		_Read_Adc
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299     014A                     _main:	
   300                           ;psect for function _main
   301                           
   302     014A                     l978:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   305                           
   306     014A  3007               	movlw	7
   307     014B  1283               	bcf	3,5	;RP0=0, select bank0
   308     014C  0099               	movwf	25	;volatile
   309                           
   310                           ;main.c: 178:     ANSEL = 0b00100001;
   311     014D  3021               	movlw	33
   312     014E  1683               	bsf	3,5	;RP0=1, select bank1
   313     014F  009F               	movwf	31	;volatile
   314                           
   315                           ;main.c: 186:     ADCON0 = 0b10000001;
   316     0150  3081               	movlw	129
   317     0151  1283               	bcf	3,5	;RP0=0, select bank0
   318     0152  009F               	movwf	31	;volatile
   319     0153                     l980:
   320                           
   321                           ;main.c: 189:     WPU = 0X00;
   322     0153  1683               	bsf	3,5	;RP0=1, select bank1
   323     0154  0195               	clrf	21	;volatile
   324                           
   325                           ;main.c: 192:     TMR0 = 0;
   326     0155  1283               	bcf	3,5	;RP0=0, select bank0
   327     0156  0181               	clrf	1	;volatile
   328     0157                     l982:
   329                           
   330                           ;main.c: 195:     OSCCAL = 0XFF;
   331     0157  30FF               	movlw	255
   332     0158  1683               	bsf	3,5	;RP0=1, select bank1
   333     0159  0090               	movwf	16	;volatile
   334     015A                     l984:
   335                           
   336                           ;main.c: 206:     OPTION_REG = 0X81;
   337     015A  3081               	movlw	129
   338     015B  0081               	movwf	1	;volatile
   339     015C                     l986:
   340                           
   341                           ;main.c: 218:     INTCON = 0XE0;
   342     015C  30E0               	movlw	224
   343     015D  008B               	movwf	11	;volatile
   344     015E                     l988:
   345                           
   346                           ;main.c: 227:     TRISIO = 0X03;
   347     015E  3003               	movlw	3
   348     015F  0085               	movwf	5	;volatile
   349     0160                     l124:	
   350                           ;main.c: 230:     for (;;) {
   351                           
   352     0160  0064               	clrwdt	;# 
   353     0161                     l990:
   354                           
   355                           ;main.c: 233:         if (buttonstimer >= 300) {
   356     0161  1283               	bcf	3,5	;RP0=0, select bank0
   357     0162  0835               	movf	_buttonstimer+1,w	;volatile
   358     0163  3A80               	xorlw	128
   359     0164  00DF               	movwf	btemp+1
   360     0165  3081               	movlw	129
   361     0166  025F               	subwf	btemp+1,w
   362     0167  1D03               	skipz
   363     0168  296B               	goto	u655
   364     0169  302C               	movlw	44
   365     016A  0234               	subwf	_buttonstimer,w	;volatile
   366     016B                     u655:
   367     016B  1C03               	skipc
   368     016C  296E               	goto	u651
   369     016D  296F               	goto	u650
   370     016E                     u651:
   371     016E  29F6               	goto	l1036
   372     016F                     u650:
   373     016F                     l992:
   374                           
   375                           ;main.c: 234:             buttonstimer = 0;
   376     016F  1283               	bcf	3,5	;RP0=0, select bank0
   377     0170  01B4               	clrf	_buttonstimer	;volatile
   378     0171  01B5               	clrf	_buttonstimer+1	;volatile
   379     0172                     l994:
   380                           
   381                           ;main.c: 236:             adc_value = Read_Adc();
   382     0172  222C               	fcall	_Read_Adc
   383     0173  1283               	bcf	3,5	;RP0=0, select bank0
   384     0174  084B               	movf	?_Read_Adc+1,w
   385     0175  00B3               	movwf	_adc_value+1	;volatile
   386     0176  084A               	movf	?_Read_Adc,w
   387     0177  00B2               	movwf	_adc_value	;volatile
   388     0178                     l996:
   389                           
   390                           ;main.c: 240:             if (adc_value > 90 && adc_value <= 1023 && canstartblinking ==
      +                           0 && starttimer == 0) {
   391     0178  3000               	movlw	0
   392     0179  0233               	subwf	_adc_value+1,w	;volatile
   393     017A  305B               	movlw	91
   394     017B  1903               	skipnz
   395     017C  0232               	subwf	_adc_value,w	;volatile
   396     017D  1C03               	skipc
   397     017E  2980               	goto	u661
   398     017F  2981               	goto	u660
   399     0180                     u661:
   400     0180  29B8               	goto	l1016
   401     0181                     u660:
   402     0181                     l998:
   403     0181  3004               	movlw	4
   404     0182  0233               	subwf	_adc_value+1,w	;volatile
   405     0183  3000               	movlw	0
   406     0184  1903               	skipnz
   407     0185  0232               	subwf	_adc_value,w	;volatile
   408     0186  1803               	skipnc
   409     0187  2989               	goto	u671
   410     0188  298A               	goto	u670
   411     0189                     u671:
   412     0189  29B8               	goto	l1016
   413     018A                     u670:
   414     018A                     l1000:
   415     018A  0840               	movf	_canstartblinking,w	;volatile
   416     018B  1D03               	btfss	3,2
   417     018C  298E               	goto	u681
   418     018D  298F               	goto	u680
   419     018E                     u681:
   420     018E  29B8               	goto	l1016
   421     018F                     u680:
   422     018F                     l1002:
   423     018F  083E               	movf	_starttimer,w	;volatile
   424     0190  1D03               	btfss	3,2
   425     0191  2993               	goto	u691
   426     0192  2994               	goto	u690
   427     0193                     u691:
   428     0193  29B8               	goto	l1016
   429     0194                     u690:
   430     0194                     l1004:
   431                           
   432                           ;main.c: 241:                 buttonclicks++;
   433     0194  3001               	movlw	1
   434     0195  07C3               	addwf	_buttonclicks,f	;volatile
   435     0196  1803               	skipnc
   436     0197  0AC4               	incf	_buttonclicks+1,f	;volatile
   437     0198  3000               	movlw	0
   438     0199  07C4               	addwf	_buttonclicks+1,f	;volatile
   439     019A                     l1006:
   440                           
   441                           ;main.c: 242:                 processstarted = 1;
   442     019A  3001               	movlw	1
   443     019B  00BA               	movwf	_processstarted	;volatile
   444     019C                     l1008:
   445                           
   446                           ;main.c: 244:                 if (buttonclicks == 1) {
   447     019C  0343               	decf	_buttonclicks,w	;volatile
   448     019D  0444               	iorwf	_buttonclicks+1,w	;volatile
   449     019E  1D03               	btfss	3,2
   450     019F  29A1               	goto	u701
   451     01A0  29A2               	goto	u700
   452     01A1                     u701:
   453     01A1  29A5               	goto	l1012
   454     01A2                     u700:
   455     01A2                     l1010:
   456                           
   457                           ;main.c: 245:                     enterbuttontimercounter = 1;
   458     01A2  3001               	movlw	1
   459     01A3  00BF               	movwf	_enterbuttontimercounter	;volatile
   460                           
   461                           ;main.c: 246:                 } else if (buttonclicks > 4) {
   462     01A4  29CE               	goto	l1022
   463     01A5                     l1012:
   464     01A5  0844               	movf	_buttonclicks+1,w	;volatile
   465     01A6  3A80               	xorlw	128
   466     01A7  00DF               	movwf	btemp+1
   467     01A8  3080               	movlw	128
   468     01A9  025F               	subwf	btemp+1,w
   469     01AA  1D03               	skipz
   470     01AB  29AE               	goto	u715
   471     01AC  3005               	movlw	5
   472     01AD  0243               	subwf	_buttonclicks,w	;volatile
   473     01AE                     u715:
   474     01AE  1C03               	skipc
   475     01AF  29B1               	goto	u711
   476     01B0  29B2               	goto	u710
   477     01B1                     u711:
   478     01B1  29CE               	goto	l1022
   479     01B2                     u710:
   480     01B2                     l1014:
   481                           
   482                           ;main.c: 247:                     buttonclicks = 4;
   483     01B2  3004               	movlw	4
   484     01B3  1283               	bcf	3,5	;RP0=0, select bank0
   485     01B4  00C3               	movwf	_buttonclicks	;volatile
   486     01B5  3000               	movlw	0
   487     01B6  00C4               	movwf	_buttonclicks+1	;volatile
   488     01B7  29CE               	goto	l1022
   489     01B8                     l1016:
   490     01B8  3000               	movlw	0
   491     01B9  0233               	subwf	_adc_value+1,w	;volatile
   492     01BA  305B               	movlw	91
   493     01BB  1903               	skipnz
   494     01BC  0232               	subwf	_adc_value,w	;volatile
   495     01BD  1803               	skipnc
   496     01BE  29C0               	goto	u721
   497     01BF  29C1               	goto	u720
   498     01C0                     u721:
   499     01C0  29CE               	goto	l1022
   500     01C1                     u720:
   501     01C1                     l1018:
   502     01C1  3000               	movlw	0
   503     01C2  0233               	subwf	_adc_value+1,w	;volatile
   504     01C3  300B               	movlw	11
   505     01C4  1903               	skipnz
   506     01C5  0232               	subwf	_adc_value,w	;volatile
   507     01C6  1C03               	skipc
   508     01C7  29C9               	goto	u731
   509     01C8  29CA               	goto	u730
   510     01C9                     u731:
   511     01C9  29CE               	goto	l1022
   512     01CA                     u730:
   513     01CA                     l1020:
   514                           
   515                           ;main.c: 250:                 dothemagicofreset= 1;
   516     01CA  3001               	movlw	1
   517     01CB  00A4               	movwf	_dothemagicofreset	;volatile
   518     01CC  3000               	movlw	0
   519     01CD  00A5               	movwf	_dothemagicofreset+1	;volatile
   520     01CE                     l1022:
   521                           
   522                           ;main.c: 254:             if (enterbuttontimercounter == 1) {
   523     01CE  1283               	bcf	3,5	;RP0=0, select bank0
   524     01CF  033F               	decf	_enterbuttontimercounter,w	;volatile
   525     01D0  1D03               	btfss	3,2
   526     01D1  29D3               	goto	u741
   527     01D2  29D4               	goto	u740
   528     01D3                     u741:
   529     01D3  29F6               	goto	l1036
   530     01D4                     u740:
   531     01D4                     l1024:
   532                           
   533                           ;main.c: 255:                 buttontimercounter++;
   534     01D4  3001               	movlw	1
   535     01D5  07AE               	addwf	_buttontimercounter,f	;volatile
   536     01D6  1803               	skipnc
   537     01D7  0AAF               	incf	_buttontimercounter+1,f	;volatile
   538     01D8  3000               	movlw	0
   539     01D9  07AF               	addwf	_buttontimercounter+1,f	;volatile
   540     01DA                     l1026:
   541                           
   542                           ;main.c: 256:                 if (buttontimercounter > 15) {
   543     01DA  082F               	movf	_buttontimercounter+1,w	;volatile
   544     01DB  3A80               	xorlw	128
   545     01DC  00DF               	movwf	btemp+1
   546     01DD  3080               	movlw	128
   547     01DE  025F               	subwf	btemp+1,w
   548     01DF  1D03               	skipz
   549     01E0  29E3               	goto	u755
   550     01E1  3010               	movlw	16
   551     01E2  022E               	subwf	_buttontimercounter,w	;volatile
   552     01E3                     u755:
   553     01E3  1C03               	skipc
   554     01E4  29E6               	goto	u751
   555     01E5  29E7               	goto	u750
   556     01E6                     u751:
   557     01E6  29F6               	goto	l1036
   558     01E7                     u750:
   559     01E7                     l1028:
   560                           
   561                           ;main.c: 257:                     enterbuttontimercounter = 0;
   562     01E7  1283               	bcf	3,5	;RP0=0, select bank0
   563     01E8  01BF               	clrf	_enterbuttontimercounter	;volatile
   564                           
   565                           ;main.c: 258:                     buttontimercounter = 0;
   566     01E9  01AE               	clrf	_buttontimercounter	;volatile
   567     01EA  01AF               	clrf	_buttontimercounter+1	;volatile
   568     01EB                     l1030:
   569                           
   570                           ;main.c: 259:                     processbuttonclicks = 2 * buttonclicks;
   571     01EB  1003               	clrc
   572     01EC  0D43               	rlf	_buttonclicks,w	;volatile
   573     01ED  00B0               	movwf	_processbuttonclicks	;volatile
   574     01EE  0D44               	rlf	_buttonclicks+1,w	;volatile
   575     01EF  00B1               	movwf	_processbuttonclicks+1	;volatile
   576     01F0                     l1032:
   577                           
   578                           ;main.c: 260:                     timecontrol = buttonclicks;
   579     01F0  0843               	movf	_buttonclicks,w	;volatile
   580     01F1  00BD               	movwf	_timecontrol	;volatile
   581                           
   582                           ;main.c: 261:                     buttonclicks = 0;
   583     01F2  01C3               	clrf	_buttonclicks	;volatile
   584     01F3  01C4               	clrf	_buttonclicks+1	;volatile
   585     01F4                     l1034:
   586                           
   587                           ;main.c: 262:                     canstartblinking = 1;
   588     01F4  3001               	movlw	1
   589     01F5  00C0               	movwf	_canstartblinking	;volatile
   590     01F6                     l1036:
   591                           
   592                           ;main.c: 266:         if(dothemagicofreset == 1){
   593     01F6  1283               	bcf	3,5	;RP0=0, select bank0
   594     01F7  0324               	decf	_dothemagicofreset,w	;volatile
   595     01F8  0425               	iorwf	_dothemagicofreset+1,w	;volatile
   596     01F9  1D03               	btfss	3,2
   597     01FA  29FC               	goto	u761
   598     01FB  29FD               	goto	u760
   599     01FC                     u761:
   600     01FC  2960               	goto	l124
   601     01FD                     u760:
   602     01FD                     l1038:
   603                           
   604                           ;main.c: 267:             tempo_led = 0;
   605     01FD  3000               	movlw	0
   606     01FE  00A3               	movwf	_tempo_led+3
   607     01FF  3000               	movlw	0
   608     0200  00A2               	movwf	_tempo_led+2
   609     0201  3000               	movlw	0
   610     0202  00A1               	movwf	_tempo_led+1
   611     0203  3000               	movlw	0
   612     0204  00A0               	movwf	_tempo_led
   613     0205                     l1040:
   614                           
   615                           ;main.c: 268:             buttonpressed = 0;
   616     0205  01B8               	clrf	_buttonpressed
   617     0206  01B9               	clrf	_buttonpressed+1
   618     0207                     l1042:
   619                           
   620                           ;main.c: 269:             ledtimer = 0;
   621     0207  01B6               	clrf	_ledtimer	;volatile
   622     0208  01B7               	clrf	_ledtimer+1	;volatile
   623     0209                     l1044:
   624                           
   625                           ;main.c: 270:             buttonstimer = 0;
   626     0209  01B4               	clrf	_buttonstimer	;volatile
   627     020A  01B5               	clrf	_buttonstimer+1	;volatile
   628     020B                     l1046:
   629                           
   630                           ;main.c: 271:             start = 0;
   631     020B  01C2               	clrf	_start	;volatile
   632     020C                     l1048:
   633                           
   634                           ;main.c: 272:             startbutton = 0;
   635     020C  01C1               	clrf	_startbutton	;volatile
   636     020D                     l1050:
   637                           
   638                           ;main.c: 273:             adc_value = 0;
   639     020D  01B2               	clrf	_adc_value	;volatile
   640     020E  01B3               	clrf	_adc_value+1	;volatile
   641     020F                     l1052:
   642                           
   643                           ;main.c: 274:             canstartblinking = 0;
   644     020F  01C0               	clrf	_canstartblinking	;volatile
   645     0210                     l1054:
   646                           
   647                           ;main.c: 275:             processbuttonclicks = 0;
   648     0210  01B0               	clrf	_processbuttonclicks	;volatile
   649     0211  01B1               	clrf	_processbuttonclicks+1	;volatile
   650     0212                     l1056:
   651                           
   652                           ;main.c: 276:             buttonclicks = 0;
   653     0212  01C3               	clrf	_buttonclicks	;volatile
   654     0213  01C4               	clrf	_buttonclicks+1	;volatile
   655     0214                     l1058:
   656                           
   657                           ;main.c: 277:             enterbuttontimercounter = 0;
   658     0214  01BF               	clrf	_enterbuttontimercounter	;volatile
   659     0215                     l1060:
   660                           
   661                           ;main.c: 278:             buttontimercounter = 0;
   662     0215  01AE               	clrf	_buttontimercounter	;volatile
   663     0216  01AF               	clrf	_buttontimercounter+1	;volatile
   664     0217                     l1062:
   665                           
   666                           ;main.c: 279:             starttimer = 0;
   667     0217  01BE               	clrf	_starttimer	;volatile
   668     0218                     l1064:
   669                           
   670                           ;main.c: 280:             counttime = 0;
   671     0218  01AC               	clrf	_counttime	;volatile
   672     0219  01AD               	clrf	_counttime+1	;volatile
   673     021A                     l1066:
   674                           
   675                           ;main.c: 281:             supercounter = 0;
   676     021A  01AA               	clrf	_supercounter
   677     021B  01AB               	clrf	_supercounter+1
   678     021C                     l1068:
   679                           
   680                           ;main.c: 282:             timecontrol = 0;
   681     021C  01BD               	clrf	_timecontrol	;volatile
   682     021D                     l1070:
   683                           
   684                           ;main.c: 283:             finalquantity = 2000;
   685     021D  30D0               	movlw	208
   686     021E  00CC               	movwf	_finalquantity	;volatile
   687     021F  3007               	movlw	7
   688     0220  00CD               	movwf	_finalquantity+1	;volatile
   689                           
   690                           ;main.c: 284:             finalbuzzer = 0;
   691     0221  01BC               	clrf	_finalbuzzer	;volatile
   692                           
   693                           ;main.c: 285:             finalbuzzercounter = 0;
   694     0222  01A8               	clrf	_finalbuzzercounter	;volatile
   695     0223  01A9               	clrf	_finalbuzzercounter+1	;volatile
   696                           
   697                           ;main.c: 286:             buzzeron = 0;
   698     0224  01BB               	clrf	_buzzeron	;volatile
   699                           
   700                           ;main.c: 287:             processstarted = 0;
   701     0225  01BA               	clrf	_processstarted	;volatile
   702                           
   703                           ;main.c: 288:             longtimecounter= 0;
   704     0226  01A6               	clrf	_longtimecounter	;volatile
   705     0227  01A7               	clrf	_longtimecounter+1	;volatile
   706                           
   707                           ;main.c: 289:             dothemagicofreset= 0;
   708     0228  01A4               	clrf	_dothemagicofreset	;volatile
   709     0229  01A5               	clrf	_dothemagicofreset+1	;volatile
   710     022A  2960               	goto	l124
   711     022B  280D               	ljmp	start
   712     022C                     __end_of_main:
   713                           
   714                           	psect	text1
   715     022C                     __ptext1:	
   716 ;; *************** function _Read_Adc *****************
   717 ;; Defined at:
   718 ;;		line 53 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  2    5[BANK0 ] unsigned int 
   725 ;; Registers used:
   726 ;;		wreg
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0
   732 ;;      Params:         0       2
   733 ;;      Locals:         0       0
   734 ;;      Temps:          0       0
   735 ;;      Totals:         0       2
   736 ;;Total ram usage:        2 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746     022C                     _Read_Adc:	
   747                           ;psect for function _Read_Adc
   748                           
   749     022C                     l876:	
   750                           ;incstack = 0
   751                           ; Regs used in _Read_Adc: [wreg]
   752                           
   753                           
   754                           ;main.c: 54: 
   755     022C  1283               	bcf	3,5	;RP0=0, select bank0
   756     022D  149F               	bsf	31,1	;volatile
   757     022E                     l79:	
   758                           ;main.c: 55:                 if (processstarted == 1) {
   759                           
   760     022E  189F               	btfsc	31,1	;volatile
   761     022F  2A31               	goto	u391
   762     0230  2A32               	goto	u390
   763     0231                     u391:
   764     0231  2A2E               	goto	l79
   765     0232                     u390:
   766     0232                     l878:
   767                           
   768                           ;main.c: 57:                     processstarted = 0;
   769     0232  081E               	movf	30,w	;volatile
   770     0233  00CB               	movwf	?_Read_Adc+1
   771     0234  1683               	bsf	3,5	;RP0=1, select bank1
   772     0235  081E               	movf	30,w	;volatile
   773     0236  1283               	bcf	3,5	;RP0=0, select bank0
   774     0237  00CA               	movwf	?_Read_Adc
   775     0238                     l82:
   776     0238  0008               	return
   777     0239                     __end_of_Read_Adc:
   778                           
   779                           	psect	text2
   780     0019                     __ptext2:	
   781 ;; *************** function _ISR *****************
   782 ;; Defined at:
   783 ;;		line 61 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0, btemp+1
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0
   797 ;;      Params:         0       0
   798 ;;      Locals:         0       0
   799 ;;      Temps:          0       5
   800 ;;      Totals:         0       5
   801 ;;Total ram usage:        5 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		Interrupt level 1
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810     0019                     _ISR:	
   811                           ;psect for function _ISR
   812                           
   813     0019                     i1l882:
   814                           
   815                           ;main.c: 64: 
   816     0019  1D0B               	btfss	11,2	;volatile
   817     001A  281C               	goto	u40_21
   818     001B  281D               	goto	u40_20
   819     001C                     u40_21:
   820     001C  2942               	goto	i1l119
   821     001D                     u40_20:
   822     001D                     i1l884:
   823                           
   824                           ;main.c: 68:             canstartblinking = 0;
   825     001D  3001               	movlw	1
   826     001E  07B6               	addwf	_ledtimer,f	;volatile
   827     001F  1803               	skipnc
   828     0020  0AB7               	incf	_ledtimer+1,f	;volatile
   829     0021  3000               	movlw	0
   830     0022  07B7               	addwf	_ledtimer+1,f	;volatile
   831                           
   832                           ;main.c: 69:             if (finalbuzzercounter <= 3000) {
   833     0023  3001               	movlw	1
   834     0024  07B4               	addwf	_buttonstimer,f	;volatile
   835     0025  1803               	skipnc
   836     0026  0AB5               	incf	_buttonstimer+1,f	;volatile
   837     0027  3000               	movlw	0
   838     0028  07B5               	addwf	_buttonstimer+1,f	;volatile
   839     0029                     i1l886:
   840                           
   841                           ;main.c: 72:                 buzzeron = 0;
   842     0029  033E               	decf	_starttimer,w	;volatile
   843     002A  1D03               	btfss	3,2
   844     002B  282D               	goto	u41_21
   845     002C  282E               	goto	u41_20
   846     002D                     u41_21:
   847     002D  286C               	goto	i1l906
   848     002E                     u41_20:
   849     002E                     i1l888:
   850                           
   851                           ;main.c: 73: 
   852     002E  3001               	movlw	1
   853     002F  07AC               	addwf	_counttime,f	;volatile
   854     0030  1803               	skipnc
   855     0031  0AAD               	incf	_counttime+1,f	;volatile
   856     0032  3000               	movlw	0
   857     0033  07AD               	addwf	_counttime+1,f	;volatile
   858     0034                     i1l890:
   859                           
   860                           ;main.c: 75: 
   861     0034  082C               	movf	_counttime,w	;volatile
   862     0035  024C               	subwf	_finalquantity,w	;volatile
   863     0036  00C5               	movwf	??_ISR
   864     0037  082D               	movf	_counttime+1,w	;volatile
   865     0038  1C03               	skipc
   866     0039  0A2D               	incf	_counttime+1,w	;volatile
   867     003A  024D               	subwf	_finalquantity+1,w	;volatile
   868     003B  00C6               	movwf	??_ISR+1
   869     003C  0846               	movf	??_ISR+1,w
   870     003D  3A80               	xorlw	128
   871     003E  00DF               	movwf	btemp+1
   872     003F  3080               	movlw	128
   873     0040  025F               	subwf	btemp+1,w
   874     0041  1D03               	skipz
   875     0042  2845               	goto	u42_25
   876     0043  3001               	movlw	1
   877     0044  0245               	subwf	??_ISR,w
   878     0045                     u42_25:
   879     0045  1803               	skipnc
   880     0046  2848               	goto	u42_21
   881     0047  2849               	goto	u42_20
   882     0048                     u42_21:
   883     0048  286C               	goto	i1l906
   884     0049                     u42_20:
   885     0049                     i1l892:
   886                           
   887                           ;main.c: 76: 
   888     0049  1283               	bcf	3,5	;RP0=0, select bank0
   889     004A  01AC               	clrf	_counttime	;volatile
   890     004B  01AD               	clrf	_counttime+1	;volatile
   891     004C                     i1l894:
   892                           
   893                           ;main.c: 77: 
   894     004C  3001               	movlw	1
   895     004D  07A6               	addwf	_longtimecounter,f	;volatile
   896     004E  1803               	skipnc
   897     004F  0AA7               	incf	_longtimecounter+1,f	;volatile
   898     0050  3000               	movlw	0
   899     0051  07A7               	addwf	_longtimecounter+1,f	;volatile
   900     0052                     i1l896:
   901                           
   902                           ;main.c: 78:                 processbuttonclicks = 0;
   903     0052  0827               	movf	_longtimecounter+1,w	;volatile
   904     0053  3A80               	xorlw	128
   905     0054  00DF               	movwf	btemp+1
   906     0055  3080               	movlw	128
   907     0056  025F               	subwf	btemp+1,w
   908     0057  1D03               	skipz
   909     0058  285B               	goto	u43_25
   910     0059  3090               	movlw	144
   911     005A  0226               	subwf	_longtimecounter,w	;volatile
   912     005B                     u43_25:
   913     005B  1C03               	skipc
   914     005C  285E               	goto	u43_21
   915     005D  285F               	goto	u43_20
   916     005E                     u43_21:
   917     005E  286C               	goto	i1l906
   918     005F                     u43_20:
   919     005F                     i1l898:
   920                           
   921                           ;main.c: 79:                 processstarted = 0;
   922     005F  1283               	bcf	3,5	;RP0=0, select bank0
   923     0060  01CC               	clrf	_finalquantity	;volatile
   924     0061  01CD               	clrf	_finalquantity+1	;volatile
   925                           
   926                           ;main.c: 80:                 finalbuzzercounter = 0;
   927     0062  01BE               	clrf	_starttimer	;volatile
   928     0063                     i1l900:
   929                           
   930                           ;main.c: 82: 
   931     0063  033A               	decf	_processstarted,w	;volatile
   932     0064  1D03               	btfss	3,2
   933     0065  2867               	goto	u44_21
   934     0066  2868               	goto	u44_20
   935     0067                     u44_21:
   936     0067  286C               	goto	i1l89
   937     0068                     u44_20:
   938     0068                     i1l902:
   939                           
   940                           ;main.c: 83:             }
   941     0068  3001               	movlw	1
   942     0069  00BC               	movwf	_finalbuzzer	;volatile
   943     006A                     i1l904:
   944                           
   945                           ;main.c: 84:         }
   946     006A  01BA               	clrf	_processstarted	;volatile
   947     006B  286C               	goto	i1l906
   948     006C                     i1l89:	
   949                           ;main.c: 89:             if (start == 1) {
   950                           
   951     006C                     i1l906:
   952                           
   953                           ;main.c: 93:                 start = 1;
   954     006C  1283               	bcf	3,5	;RP0=0, select bank0
   955     006D  033C               	decf	_finalbuzzer,w	;volatile
   956     006E  1D03               	btfss	3,2
   957     006F  2871               	goto	u45_21
   958     0070  2872               	goto	u45_20
   959     0071                     u45_21:
   960     0071  2894               	goto	i1l920
   961     0072                     u45_20:
   962     0072                     i1l908:
   963                           
   964                           ;main.c: 94:                 buzzeron= 1;
   965     0072  3001               	movlw	1
   966     0073  07A8               	addwf	_finalbuzzercounter,f	;volatile
   967     0074  1803               	skipnc
   968     0075  0AA9               	incf	_finalbuzzercounter+1,f	;volatile
   969     0076  3000               	movlw	0
   970     0077  07A9               	addwf	_finalbuzzercounter+1,f	;volatile
   971     0078                     i1l910:
   972                           
   973                           ;main.c: 95:             }
   974     0078  01C0               	clrf	_canstartblinking	;volatile
   975     0079                     i1l912:
   976                           
   977                           ;main.c: 96:             ledtimer = 0;
   978     0079  0829               	movf	_finalbuzzercounter+1,w	;volatile
   979     007A  3A80               	xorlw	128
   980     007B  00DF               	movwf	btemp+1
   981     007C  308B               	movlw	139
   982     007D  025F               	subwf	btemp+1,w
   983     007E  1D03               	skipz
   984     007F  2882               	goto	u46_25
   985     0080  30B9               	movlw	185
   986     0081  0228               	subwf	_finalbuzzercounter,w	;volatile
   987     0082                     u46_25:
   988     0082  1803               	skipnc
   989     0083  2885               	goto	u46_21
   990     0084  2886               	goto	u46_20
   991     0085                     u46_21:
   992     0085  288A               	goto	i1l916
   993     0086                     u46_20:
   994     0086                     i1l914:
   995                           
   996                           ;main.c: 97:         } else if (processbuttonclicks <= 0 && canstartblinking == 1) {
   997     0086  3001               	movlw	1
   998     0087  1283               	bcf	3,5	;RP0=0, select bank0
   999     0088  00BB               	movwf	_buzzeron	;volatile
  1000                           
  1001                           ;main.c: 98: 
  1002     0089  2894               	goto	i1l920
  1003     008A                     i1l916:
  1004                           
  1005                           ;main.c: 99:             if (timecontrol == 4) {
  1006     008A  1283               	bcf	3,5	;RP0=0, select bank0
  1007     008B  01BB               	clrf	_buzzeron	;volatile
  1008     008C                     i1l918:
  1009                           
  1010                           ;main.c: 101:             } else if (timecontrol == 3) {
  1011     008C  3001               	movlw	1
  1012     008D  00BE               	movwf	_starttimer	;volatile
  1013                           
  1014                           ;main.c: 105:             } else if (timecontrol == 1) {
  1015     008E  01B0               	clrf	_processbuttonclicks	;volatile
  1016     008F  01B1               	clrf	_processbuttonclicks+1	;volatile
  1017                           
  1018                           ;main.c: 106:                 finalquantity = 7500;
  1019     0090  01BA               	clrf	_processstarted	;volatile
  1020                           
  1021                           ;main.c: 107:             } else {
  1022     0091  01A8               	clrf	_finalbuzzercounter	;volatile
  1023     0092  01A9               	clrf	_finalbuzzercounter+1	;volatile
  1024                           
  1025                           ;main.c: 108:                 finalquantity = 0;
  1026     0093  01BC               	clrf	_finalbuzzer	;volatile
  1027     0094                     i1l920:
  1028                           
  1029                           ;main.c: 114:             }
  1030     0094  0837               	movf	_ledtimer+1,w	;volatile
  1031     0095  3A80               	xorlw	128
  1032     0096  00DF               	movwf	btemp+1
  1033     0097  3080               	movlw	128
  1034     0098  025F               	subwf	btemp+1,w
  1035     0099  1D03               	skipz
  1036     009A  289D               	goto	u47_25
  1037     009B  30C8               	movlw	200
  1038     009C  0236               	subwf	_ledtimer,w	;volatile
  1039     009D                     u47_25:
  1040     009D  1C03               	skipc
  1041     009E  28A0               	goto	u47_21
  1042     009F  28A1               	goto	u47_20
  1043     00A0                     u47_21:
  1044     00A0  28CA               	goto	i1l934
  1045     00A1                     u47_20:
  1046     00A1                     i1l922:
  1047     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1048     00A2  0831               	movf	_processbuttonclicks+1,w	;volatile
  1049     00A3  3A80               	xorlw	128
  1050     00A4  00DF               	movwf	btemp+1
  1051     00A5  3080               	movlw	128
  1052     00A6  025F               	subwf	btemp+1,w
  1053     00A7  1D03               	skipz
  1054     00A8  28AB               	goto	u48_25
  1055     00A9  3001               	movlw	1
  1056     00AA  0230               	subwf	_processbuttonclicks,w	;volatile
  1057     00AB                     u48_25:
  1058     00AB  1C03               	skipc
  1059     00AC  28AE               	goto	u48_21
  1060     00AD  28AF               	goto	u48_20
  1061     00AE                     u48_21:
  1062     00AE  28CA               	goto	i1l934
  1063     00AF                     u48_20:
  1064     00AF                     i1l924:
  1065     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1066     00B0  0340               	decf	_canstartblinking,w	;volatile
  1067     00B1  1D03               	btfss	3,2
  1068     00B2  28B4               	goto	u49_21
  1069     00B3  28B5               	goto	u49_20
  1070     00B4                     u49_21:
  1071     00B4  28CA               	goto	i1l934
  1072     00B5                     u49_20:
  1073     00B5                     i1l926:
  1074                           
  1075                           ;main.c: 115:         }
  1076     00B5  30FF               	movlw	255
  1077     00B6  07B0               	addwf	_processbuttonclicks,f	;volatile
  1078     00B7  1803               	skipnc
  1079     00B8  0AB1               	incf	_processbuttonclicks+1,f	;volatile
  1080     00B9  30FF               	movlw	255
  1081     00BA  07B1               	addwf	_processbuttonclicks+1,f	;volatile
  1082     00BB                     i1l928:
  1083                           
  1084                           ;main.c: 116: 
  1085     00BB  0342               	decf	_start,w	;volatile
  1086     00BC  1D03               	btfss	3,2
  1087     00BD  28BF               	goto	u50_21
  1088     00BE  28C0               	goto	u50_20
  1089     00BF                     u50_21:
  1090     00BF  28C3               	goto	i1l96
  1091     00C0                     u50_20:
  1092     00C0                     i1l930:
  1093                           
  1094                           ;main.c: 117: 
  1095     00C0  01C2               	clrf	_start	;volatile
  1096                           
  1097                           ;main.c: 118:         if ((start == 1 && starttimer == 0) || (starttimer == 1 && finalqu
      +                          antity != 0) || buzzeron == 1) {
  1098     00C1  01BB               	clrf	_buzzeron	;volatile
  1099                           
  1100                           ;main.c: 119: 
  1101     00C2  28C7               	goto	i1l932
  1102     00C3                     i1l96:
  1103                           
  1104                           ;main.c: 120:             GP5 = 1;
  1105     00C3  3001               	movlw	1
  1106     00C4  00C2               	movwf	_start	;volatile
  1107                           
  1108                           ;main.c: 121: 
  1109     00C5  3001               	movlw	1
  1110     00C6  00BB               	movwf	_buzzeron	;volatile
  1111     00C7                     i1l932:
  1112                           
  1113                           ;main.c: 123:                 GP2 = 1;
  1114     00C7  01B6               	clrf	_ledtimer	;volatile
  1115     00C8  01B7               	clrf	_ledtimer+1	;volatile
  1116                           
  1117                           ;main.c: 124:             } else {
  1118     00C9  2918               	goto	i1l964
  1119     00CA                     i1l934:
  1120     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1121     00CB  0831               	movf	_processbuttonclicks+1,w	;volatile
  1122     00CC  3A80               	xorlw	128
  1123     00CD  00DF               	movwf	btemp+1
  1124     00CE  3080               	movlw	128
  1125     00CF  025F               	subwf	btemp+1,w
  1126     00D0  1D03               	skipz
  1127     00D1  28D4               	goto	u51_25
  1128     00D2  3001               	movlw	1
  1129     00D3  0230               	subwf	_processbuttonclicks,w	;volatile
  1130     00D4                     u51_25:
  1131     00D4  1803               	skipnc
  1132     00D5  28D7               	goto	u51_21
  1133     00D6  28D8               	goto	u51_20
  1134     00D7                     u51_21:
  1135     00D7  2918               	goto	i1l964
  1136     00D8                     u51_20:
  1137     00D8                     i1l936:
  1138     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1139     00D9  0340               	decf	_canstartblinking,w	;volatile
  1140     00DA  1D03               	btfss	3,2
  1141     00DB  28DD               	goto	u52_21
  1142     00DC  28DE               	goto	u52_20
  1143     00DD                     u52_21:
  1144     00DD  2918               	goto	i1l964
  1145     00DE                     u52_20:
  1146     00DE                     i1l938:
  1147                           
  1148                           ;main.c: 126:             }
  1149     00DE  3004               	movlw	4
  1150     00DF  063D               	xorwf	_timecontrol,w	;volatile
  1151     00E0  1D03               	btfss	3,2
  1152     00E1  28E3               	goto	u53_21
  1153     00E2  28E4               	goto	u53_20
  1154     00E3                     u53_21:
  1155     00E3  28E9               	goto	i1l942
  1156     00E4                     u53_20:
  1157     00E4                     i1l940:
  1158                           
  1159                           ;main.c: 127:         } else {
  1160     00E4  3030               	movlw	48
  1161     00E5  00CC               	movwf	_finalquantity	;volatile
  1162     00E6  3075               	movlw	117
  1163     00E7  00CD               	movwf	_finalquantity+1	;volatile
  1164                           
  1165                           ;main.c: 128: 
  1166     00E8  290B               	goto	i1l956
  1167     00E9                     i1l942:
  1168     00E9  3003               	movlw	3
  1169     00EA  063D               	xorwf	_timecontrol,w	;volatile
  1170     00EB  1D03               	btfss	3,2
  1171     00EC  28EE               	goto	u54_21
  1172     00ED  28EF               	goto	u54_20
  1173     00EE                     u54_21:
  1174     00EE  28F4               	goto	i1l946
  1175     00EF                     u54_20:
  1176     00EF                     i1l944:
  1177                           
  1178                           ;main.c: 129:             GP5 = 0;
  1179     00EF  30E4               	movlw	228
  1180     00F0  00CC               	movwf	_finalquantity	;volatile
  1181     00F1  3057               	movlw	87
  1182     00F2  00CD               	movwf	_finalquantity+1	;volatile
  1183                           
  1184                           ;main.c: 130:             GP2 = 0;
  1185     00F3  290B               	goto	i1l956
  1186     00F4                     i1l946:
  1187     00F4  3002               	movlw	2
  1188     00F5  063D               	xorwf	_timecontrol,w	;volatile
  1189     00F6  1D03               	btfss	3,2
  1190     00F7  28F9               	goto	u55_21
  1191     00F8  28FA               	goto	u55_20
  1192     00F9                     u55_21:
  1193     00F9  28FF               	goto	i1l950
  1194     00FA                     u55_20:
  1195     00FA                     i1l948:
  1196                           
  1197                           ;main.c: 131:         }
  1198     00FA  3098               	movlw	152
  1199     00FB  00CC               	movwf	_finalquantity	;volatile
  1200     00FC  303A               	movlw	58
  1201     00FD  00CD               	movwf	_finalquantity+1	;volatile
  1202                           
  1203                           ;main.c: 132: 
  1204     00FE  290B               	goto	i1l956
  1205     00FF                     i1l950:
  1206     00FF  033D               	decf	_timecontrol,w	;volatile
  1207     0100  1D03               	btfss	3,2
  1208     0101  2903               	goto	u56_21
  1209     0102  2904               	goto	u56_20
  1210     0103                     u56_21:
  1211     0103  2909               	goto	i1l954
  1212     0104                     u56_20:
  1213     0104                     i1l952:
  1214                           
  1215                           ;main.c: 133:         T0IF = 0;
  1216     0104  304C               	movlw	76
  1217     0105  00CC               	movwf	_finalquantity	;volatile
  1218     0106  301D               	movlw	29
  1219     0107  00CD               	movwf	_finalquantity+1	;volatile
  1220                           
  1221                           ;main.c: 134:         TMR0 = 6;
  1222     0108  290B               	goto	i1l956
  1223     0109                     i1l954:
  1224                           
  1225                           ;main.c: 135:     }
  1226     0109  01CC               	clrf	_finalquantity	;volatile
  1227     010A  01CD               	clrf	_finalquantity+1	;volatile
  1228     010B                     i1l956:
  1229                           
  1230                           ;main.c: 138: 
  1231     010B  083E               	movf	_starttimer,w	;volatile
  1232     010C  1D03               	btfss	3,2
  1233     010D  290F               	goto	u57_21
  1234     010E  2910               	goto	u57_20
  1235     010F                     u57_21:
  1236     010F  2918               	goto	i1l964
  1237     0110                     u57_20:
  1238     0110                     i1l958:
  1239     0110  083C               	movf	_finalbuzzer,w	;volatile
  1240     0111  1D03               	btfss	3,2
  1241     0112  2914               	goto	u58_21
  1242     0113  2915               	goto	u58_20
  1243     0114                     u58_21:
  1244     0114  2918               	goto	i1l964
  1245     0115                     u58_20:
  1246     0115                     i1l960:
  1247                           
  1248                           ;main.c: 139: void main(void) {
  1249     0115  3001               	movlw	1
  1250     0116  00BE               	movwf	_starttimer	;volatile
  1251     0117                     i1l962:
  1252                           
  1253                           ;main.c: 140: 
  1254     0117  01C0               	clrf	_canstartblinking	;volatile
  1255     0118                     i1l964:
  1256     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1257     0119  0342               	decf	_start,w	;volatile
  1258     011A  1D03               	btfss	3,2
  1259     011B  291D               	goto	u59_21
  1260     011C  291E               	goto	u59_20
  1261     011D                     u59_21:
  1262     011D  2923               	goto	i1l968
  1263     011E                     u59_20:
  1264     011E                     i1l966:
  1265     011E  083E               	movf	_starttimer,w	;volatile
  1266     011F  1903               	btfsc	3,2
  1267     0120  2922               	goto	u60_21
  1268     0121  2923               	goto	u60_20
  1269     0122                     u60_21:
  1270     0122  2933               	goto	i1l111
  1271     0123                     u60_20:
  1272     0123                     i1l968:
  1273     0123  033E               	decf	_starttimer,w	;volatile
  1274     0124  1D03               	btfss	3,2
  1275     0125  2927               	goto	u61_21
  1276     0126  2928               	goto	u61_20
  1277     0127                     u61_21:
  1278     0127  292E               	goto	i1l972
  1279     0128                     u61_20:
  1280     0128                     i1l970:
  1281     0128  084C               	movf	_finalquantity,w	;volatile
  1282     0129  044D               	iorwf	_finalquantity+1,w	;volatile
  1283     012A  1D03               	btfss	3,2
  1284     012B  292D               	goto	u62_21
  1285     012C  292E               	goto	u62_20
  1286     012D                     u62_21:
  1287     012D  2933               	goto	i1l111
  1288     012E                     u62_20:
  1289     012E                     i1l972:
  1290     012E  033B               	decf	_buzzeron,w	;volatile
  1291     012F  1D03               	btfss	3,2
  1292     0130  2932               	goto	u63_21
  1293     0131  2933               	goto	u63_20
  1294     0132                     u63_21:
  1295     0132  293D               	goto	i1l109
  1296     0133                     u63_20:
  1297     0133                     i1l111:
  1298     0133  1685               	bsf	5,5	;volatile
  1299     0134                     i1l974:
  1300     0134  033B               	decf	_buzzeron,w	;volatile
  1301     0135  1D03               	btfss	3,2
  1302     0136  2938               	goto	u64_21
  1303     0137  2939               	goto	u64_20
  1304     0138                     u64_21:
  1305     0138  293B               	goto	i1l116
  1306     0139                     u64_20:
  1307     0139                     i1l976:
  1308     0139  1505               	bsf	5,2	;volatile
  1309     013A  293F               	goto	i1l118
  1310     013B                     i1l116:
  1311     013B  1105               	bcf	5,2	;volatile
  1312     013C  293F               	goto	i1l118
  1313     013D                     i1l109:
  1314     013D  1285               	bcf	5,5	;volatile
  1315     013E  1105               	bcf	5,2	;volatile
  1316     013F                     i1l118:
  1317     013F  110B               	bcf	11,2	;volatile
  1318     0140  3006               	movlw	6
  1319     0141  0081               	movwf	1	;volatile
  1320     0142                     i1l119:
  1321     0142  0849               	movf	??_ISR+4,w
  1322     0143  0848               	movf	??_ISR+3,w
  1323     0144  008A               	movwf	10
  1324     0145  0E47               	swapf	??_ISR+2,w
  1325     0146  0083               	movwf	3
  1326     0147  0EDE               	swapf	btemp,f
  1327     0148  0E5E               	swapf	btemp,w
  1328     0149  0009               	retfie
  1329     014A                     __end_of_ISR:
  1330     0000                     ___latbits      equ	0
  1331     005E                     btemp           set	94	;btemp
  1332     005E                     wtemp0          set	94
  1333                           
  1334                           	psect	intentry
  1335     0004                     __pintentry:	
  1336                           ;incstack = 0
  1337                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
  1338                           
  1339     0004                     interrupt_function:
  1340     005E                     saved_w         set	btemp
  1341     0004  00DE               	movwf	btemp
  1342     0005  0E03               	swapf	3,w
  1343     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1344     0007  00C7               	movwf	??_ISR+2
  1345     0008  080A               	movf	10,w
  1346     0009  00C8               	movwf	??_ISR+3
  1347     000A  085F               	movf	btemp+1,w
  1348     000B  00C9               	movwf	??_ISR+4
  1349     000C  2819               	ljmp	_ISR
  1350                           
  1351                           	psect	config
  1352                           
  1353                           ;Config register CONFIG @ 0x2007
  1354                           ;	Oscillator Selection bits
  1355                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1356                           ;	Watchdog Timer Enable bit
  1357                           ;	WDTE = ON, WDT enabled
  1358                           ;	Power-Up Timer Enable bit
  1359                           ;	PWRTE = OFF, PWRT disabled
  1360                           ;	GP3/MCLR pin function select
  1361                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  1362                           ;	Brown-out Detect Enable bit
  1363                           ;	BOREN = OFF, BOD disabled
  1364                           ;	Code Protection bit
  1365                           ;	CP = OFF, Program Memory code protection is disabled
  1366                           ;	Data Code Protection bit
  1367                           ;	CPD = OFF, Data memory code protection is disabled
  1368     2007                     	org	8199
  1369     2007  319C               	dw	12700

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7      46

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Read_Adc

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Read_Adc
 ---------------------------------------------------------------------------------
 (1) _Read_Adc                                             2     0      2       0
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_Adc

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK0               62      7      46     74.2%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BITCOMMON            0      0       0      0.0%
DATA                 0      0      46      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Aug 08 22:41:46 2025

                     l82 0238                       l79 022E                       fsr 0004  
                    l124 0160                      l876 022C                      l980 0153  
                    l878 0232                      l990 0161                      l982 0157  
                    _GP2 002A                      l992 016F                      l984 015A  
                    _GP5 002D                      l994 0172                      l986 015C  
                    l978 014A                      l996 0178                      l988 015E  
                    l998 0181                      u700 01A2                      _ISR 0019  
                    u701 01A1                      u390 0232                      u710 01B2  
                    u391 0231                      u711 01B1                      u720 01C1  
                    u721 01C0                      u730 01CA                      u650 016F  
                    u731 01C9                      u715 01AE                      u651 016E  
                    u740 01D4                      u660 0181                      u741 01D3  
                    u661 0180                      u750 01E7                      u670 018A  
                    u751 01E6                      u671 0189                      u655 016B  
                    u760 01FD                      u680 018F                      u761 01FC  
                    u681 018E                      u690 0194                      u755 01E3  
                    u691 0193       _buttontimercounter 002E                      _WPU 0095  
                    indf 0000              _startbutton 0041                     ?_ISR 0045  
                   l1000 018A                     l1010 01A2                     l1002 018F  
                   l1020 01CA                     l1012 01A5                     l1004 0194  
                   l1030 01EB                     l1014 01B2                     l1022 01CE  
                   l1006 019A                     l1040 0205                     l1032 01F0  
                   l1024 01D4                     l1008 019C                     l1016 01B8  
                   l1050 020D                     l1042 0207                     l1034 01F4  
                   l1026 01DA                     l1018 01C1                     l1060 0215  
                   l1052 020F                     l1044 0209                     l1028 01E7  
                   l1036 01F6                     l1070 021D                     l1062 0217  
                   l1054 0210                     l1046 020B                     l1038 01FD  
                   l1064 0218                     l1056 0212                     l1048 020C  
                   l1066 021A                     l1058 0214                     l1068 021C  
                   _T0IF 005A                     i1l96 00C3                     i1l89 006C  
                   _TMR0 0001                     _main 014A                     btemp 005E  
                   start 000D                    ??_ISR 0045                    ?_main 0045  
                  _CMCON 0019                    _ANSEL 009F                    i1l111 0133  
                  i1l116 013B                    i1l109 013D                    i1l118 013F  
                  i1l119 0142                    i1l900 0063                    i1l910 0078  
                  i1l902 0068                    i1l912 0079                    i1l920 0094  
                  i1l904 006A                    i1l930 00C0                    i1l922 00A1  
                  i1l914 0086                    i1l906 006C                    i1l940 00E4  
                  i1l932 00C7                    i1l924 00AF                    i1l916 008A  
                  i1l908 0072                    i1l950 00FF                    i1l942 00E9  
                  i1l926 00B5                    i1l934 00CA                    i1l918 008C  
                  i1l960 0115                    i1l952 0104                    i1l944 00EF  
                  i1l936 00D8                    i1l928 00BB                    i1l970 0128  
                  i1l962 0117                    i1l954 0109                    i1l946 00F4  
                  i1l938 00DE                    i1l890 0034                    i1l882 0019  
                  i1l972 012E                    i1l948 00FA                    i1l956 010B  
                  i1l964 0118                    i1l892 0049                    i1l884 001D  
                  i1l974 0134                    i1l966 011E                    i1l958 0110  
                  i1l894 004C                    i1l886 0029                    i1l976 0139  
                  i1l968 0123                    i1l896 0052                    i1l888 002E  
                  i1l898 005F                    u40_20 001D                    u40_21 001C  
                  u41_20 002E                    u41_21 002D                    u50_20 00C0  
                  u42_20 0049                    u50_21 00BF                    u42_21 0048  
                  u42_25 0045                    u51_20 00D8                    u43_20 005F  
                  u51_21 00D7                    u43_21 005E                    u51_25 00D4  
                  u43_25 005B                    u60_20 0123                    u52_20 00DE  
                  u44_20 0068                    u60_21 0122                    u52_21 00DD  
                  u44_21 0067                    u61_20 0128                    u53_20 00E4  
                  u45_20 0072                    u61_21 0127                    u53_21 00E3  
                  u45_21 0071                    u62_20 012E                    u54_20 00EF  
                  u46_20 0086                    u62_21 012D                    u54_21 00EE  
                  u46_21 0085                    u46_25 0082                    u63_20 0133  
                  u55_20 00FA                    u47_20 00A1                    u63_21 0132  
                  u55_21 00F9                    u47_21 00A0                    u47_25 009D  
                  u64_20 0139                    u56_20 0104                    u48_20 00AF  
                  u64_21 0138                    u56_21 0103                    u48_21 00AE  
                  u48_25 00AB                    u57_20 0110                    u49_20 00B5  
                  u57_21 010F                    u49_21 00B4                    u58_20 0115  
                  u58_21 0114                    u59_20 011E                    u59_21 011D  
                  _start 0042                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000E             __end_of_main 022C  
       __end_of_Read_Adc 0239             _supercounter 002A                   ??_main 0000  
                 _ADCON0 001F                   _ADRESH 001E                   _ADRESL 009E  
                 _INTCON 000B                   _OSCCAL 0090                   _TRISIO 0085  
                 saved_w 005E  __end_of__initialization 0017           __pcstackCOMMON 0000  
           __pidataBANK0 0241               __pbssBANK0 0020                ?_Read_Adc 004A  
             __pmaintext 014A               __pintentry 0004            _buttonpressed 0038  
             ??_Read_Adc 0000                  __ptext1 022C                  __ptext2 0019  
        _longtimecounter 0026                  clrloop0 023A     end_of_initialization 0017  
_enterbuttontimercounter 003F       _finalbuzzercounter 0028               _starttimer 003E  
    _processbuttonclicks 0030      start_initialization 000E              __end_of_ISR 014A  
            __pdataBANK0 004C                ___latbits 0000            __pcstackBANK0 0045  
              _adc_value 0032             _buttonclicks 0043             _buttonstimer 0034  
              _counttime 002C        interrupt_function 0004                clear_ram0 0239  
      _dothemagicofreset 0024              _finalbuzzer 003C                _tempo_led 0020  
             _ADCON0bits 001F                 _Read_Adc 022C                 _ledtimer 0036  
               _buzzeron 003B           _processstarted 003A                 intlevel1 0000  
          _finalquantity 004C               _OPTION_REG 0081         _canstartblinking 0040  
            _timecontrol 003D  
