

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Feb 04 21:27:26 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x5E,2
    15     0000                     
    16                           ; Generated 17/08/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC12F675 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0019                     	;# 
    64     001E                     	;# 
    65     001F                     	;# 
    66     0081                     	;# 
    67     0085                     	;# 
    68     008C                     	;# 
    69     008E                     	;# 
    70     0090                     	;# 
    71     0095                     	;# 
    72     0096                     	;# 
    73     0096                     	;# 
    74     0099                     	;# 
    75     009A                     	;# 
    76     009A                     	;# 
    77     009B                     	;# 
    78     009C                     	;# 
    79     009D                     	;# 
    80     009E                     	;# 
    81     009F                     	;# 
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0019                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     008C                     	;# 
   101     008E                     	;# 
   102     0090                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0096                     	;# 
   106     0099                     	;# 
   107     009A                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     000B                     _INTCON	set	11
   115     001F                     _ADCON0	set	31
   116     0019                     _CMCON	set	25
   117     0001                     _TMR0	set	1
   118     001E                     _ADRESH	set	30
   119     00F8                     _ADON	set	248
   120     002D                     _GP5	set	45
   121     005A                     _TMR0IF	set	90
   122     002A                     _GP2	set	42
   123     00F9                     _GO_nDONE	set	249
   124     0081                     _OPTION_REG	set	129
   125     0090                     _OSCCAL	set	144
   126     0095                     _WPU	set	149
   127     009F                     _ANSEL	set	159
   128     0085                     _TRISIO	set	133
   129     009E                     _ADRESL	set	158
   130                           
   131                           	psect	cinit
   132     000E                     start_initialization:	
   133                           ; #config settings
   134                           
   135     000E                     __initialization:
   136                           
   137                           ; Clear objects allocated to BANK0
   138     000E  1283               	bcf	3,5	;RP0=0, select bank0
   139     000F  01A0               	clrf	__pbssBANK0& (0+127)
   140     0010  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   141     0011  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   142     0012  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   143     0013  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   144     0014  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   145     0015  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   146     0016  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   147     0017  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   148     0018                     end_of_initialization:	
   149                           ;End of C runtime variable initialization code
   150                           
   151     0018                     __end_of__initialization:
   152     0018  0183               	clrf	3
   153     0019  28C9               	ljmp	_main	;jump to C main() function
   154                           
   155                           	psect	bssBANK0
   156     0020                     __pbssBANK0:
   157     0020                     _enableCounter:
   158     0020                     	ds	2
   159     0022                     _voltageX10:
   160     0022                     	ds	2
   161     0024                     _reading:
   162     0024                     	ds	2
   163     0026                     _timerminutes:
   164     0026                     	ds	2
   165     0028                     _counter:
   166     0028                     	ds	1
   167                           
   168                           	psect	cstackCOMMON
   169     0000                     __pcstackCOMMON:
   170     0000                     ??_driveLED:
   171     0000                     ??_main:	
   172                           ; 1 bytes @ 0x0
   173                           
   174     0000                     ??___wmul:	
   175                           ; 1 bytes @ 0x0
   176                           
   177                           
   178                           	psect	cstackBANK0
   179     0029                     __pcstackBANK0:	
   180                           ; 1 bytes @ 0x0
   181                           
   182     0029                     ?_driveLED:
   183     0029                     ?_isr:	
   184                           ; 1 bytes @ 0x0
   185                           
   186     0029                     ?_main:	
   187                           ; 1 bytes @ 0x0
   188                           
   189     0029                     ?___wmul:	
   190                           ; 1 bytes @ 0x0
   191                           
   192     0029                     driveLED@i:	
   193                           ; 2 bytes @ 0x0
   194                           
   195     0029                     ___wmul@multiplier:	
   196                           ; 2 bytes @ 0x0
   197                           
   198                           
   199                           ; 2 bytes @ 0x0
   200     0029                     	ds	2
   201     002B                     ___wmul@multiplicand:
   202                           
   203                           ; 2 bytes @ 0x2
   204     002B                     	ds	2
   205     002D                     ___wmul@product:
   206                           
   207                           ; 2 bytes @ 0x4
   208     002D                     	ds	2
   209     002F                     ??_isr:
   210                           
   211                           ; 1 bytes @ 0x6
   212     002F                     	ds	3
   213                           
   214                           	psect	maintext
   215     00C9                     __pmaintext:	
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 79 in file "main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0
   235 ;;      Params:         0       0
   236 ;;      Locals:         0       0
   237 ;;      Temps:          0       0
   238 ;;      Totals:         0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called: 2
   241 ;; This function calls:
   242 ;;		Nothing
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248     00C9                     _main:	
   249                           ;psect for function _main
   250                           
   251     00C9                     l766:	
   252                           ;incstack = 0
   253                           ; Regs used in _main: [wreg+status,2]
   254                           
   255                           
   256                           ;main.c: 80: }
   257     00C9  3001               	movlw	1
   258     00CA  1683               	bsf	3,5	;RP0=1, select bank1
   259     00CB  0085               	movwf	5	;volatile
   260     00CC  3007               	movlw	7
   261     00CD  1283               	bcf	3,5	;RP0=0, select bank0
   262     00CE  0099               	movwf	25	;volatile
   263     00CF  3011               	movlw	17
   264     00D0  1683               	bsf	3,5	;RP0=1, select bank1
   265     00D1  009F               	movwf	31	;volatile
   266     00D2  3080               	movlw	128
   267     00D3  1283               	bcf	3,5	;RP0=0, select bank0
   268     00D4  009F               	movwf	31	;volatile
   269     00D5                     l768:
   270     00D5  141F               	bsf	31,0	;volatile
   271     00D6                     l770:
   272     00D6  1683               	bsf	3,5	;RP0=1, select bank1
   273     00D7  0195               	clrf	21	;volatile
   274     00D8                     l772:
   275     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   276     00D9  0181               	clrf	1	;volatile
   277     00DA  30FF               	movlw	255
   278     00DB  1683               	bsf	3,5	;RP0=1, select bank1
   279     00DC  0090               	movwf	16	;volatile
   280     00DD  3087               	movlw	135
   281     00DE  0081               	movwf	1	;volatile
   282     00DF  30E0               	movlw	224
   283     00E0  008B               	movwf	11	;volatile
   284     00E1                     l774:
   285     00E1  1283               	bcf	3,5	;RP0=0, select bank0
   286     00E2  1105               	bcf	5,2	;volatile
   287     00E3                     l776:
   288     00E3  1285               	bcf	5,5	;volatile
   289     00E4                     l71:
   290     00E4                     l72:
   291     00E4  28E4               	goto	l71
   292     00E5  280D               	ljmp	start
   293     00E6                     __end_of_main:
   294                           
   295                           	psect	text1
   296     001A                     __ptext1:	
   297 ;; *************** function _isr *****************
   298 ;; Defined at:
   299 ;;		line 28 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0
   313 ;;      Params:         0       0
   314 ;;      Locals:         0       0
   315 ;;      Temps:          0       3
   316 ;;      Totals:         0       3
   317 ;;Total ram usage:        3 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 1
   320 ;; This function calls:
   321 ;;		___wmul
   322 ;;		_driveLED
   323 ;; This function is called by:
   324 ;;		Interrupt level 1
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328     001A                     _isr:	
   329                           ;psect for function _isr
   330                           
   331     001A                     i1l720:
   332                           
   333                           ;main.c: 30: 
   334     001A  3001               	movlw	1
   335     001B  00DF               	movwf	btemp+1
   336     001C  085F               	movf	btemp+1,w
   337     001D  07A8               	addwf	_counter,f	;volatile
   338     001E                     i1l722:
   339                           
   340                           ;main.c: 31:         }
   341     001E  0320               	decf	_enableCounter,w	;volatile
   342     001F  0421               	iorwf	_enableCounter+1,w	;volatile
   343     0020  1D03               	btfss	3,2
   344     0021  2823               	goto	u20_21
   345     0022  2824               	goto	u20_20
   346     0023                     u20_21:
   347     0023  282A               	goto	i1l726
   348     0024                     u20_20:
   349     0024                     i1l724:
   350                           
   351                           ;main.c: 32:         counter= 0;
   352     0024  3001               	movlw	1
   353     0025  07A6               	addwf	_timerminutes,f	;volatile
   354     0026  1803               	skipnc
   355     0027  0AA7               	incf	_timerminutes+1,f	;volatile
   356     0028  3000               	movlw	0
   357     0029  07A7               	addwf	_timerminutes+1,f	;volatile
   358     002A                     i1l726:
   359                           
   360                           ;main.c: 36:     }
   361     002A  0328               	decf	_counter,w	;volatile
   362     002B  1D03               	btfss	3,2
   363     002C  282E               	goto	u21_21
   364     002D  282F               	goto	u21_20
   365     002E                     u21_21:
   366     002E  2888               	goto	i1l752
   367     002F                     u21_20:
   368     002F                     i1l728:
   369                           
   370                           ;main.c: 37:     if(timerminutes == 100){
   371     002F  149F               	bsf	31,1	;volatile
   372     0030                     i1l51:	
   373                           ;main.c: 38:         driveLED(0);
   374                           
   375     0030  189F               	btfsc	31,1	;volatile
   376     0031  2833               	goto	u22_21
   377     0032  2834               	goto	u22_20
   378     0033                     u22_21:
   379     0033  2830               	goto	i1l51
   380     0034                     u22_20:
   381     0034                     i1l730:
   382                           
   383                           ;main.c: 39:         enableCounter= 0;
   384     0034  081E               	movf	30,w	;volatile
   385     0035  00A5               	movwf	_reading+1	;volatile
   386     0036  1683               	bsf	3,5	;RP0=1, select bank1
   387     0037  081E               	movf	30,w	;volatile
   388     0038  1283               	bcf	3,5	;RP0=0, select bank0
   389     0039  00A4               	movwf	_reading	;volatile
   390     003A                     i1l732:
   391                           
   392                           ;main.c: 40:         timerminutes= 0;
   393     003A  0825               	movf	_reading+1,w	;volatile
   394     003B  00AA               	movwf	___wmul@multiplier+1
   395     003C  0824               	movf	_reading,w	;volatile
   396     003D  00A9               	movwf	___wmul@multiplier
   397     003E  3005               	movlw	5
   398     003F  00AB               	movwf	___wmul@multiplicand
   399     0040  3000               	movlw	0
   400     0041  00AC               	movwf	___wmul@multiplicand+1
   401     0042  20A3               	fcall	___wmul
   402     0043  1283               	bcf	3,5	;RP0=0, select bank0
   403     0044  082A               	movf	?___wmul+1,w
   404     0045  00A3               	movwf	_voltageX10+1	;volatile
   405     0046  0829               	movf	?___wmul,w
   406     0047  00A2               	movwf	_voltageX10	;volatile
   407     0048                     i1l734:
   408                           
   409                           ;main.c: 42:     }
   410     0048  0823               	movf	_voltageX10+1,w	;volatile
   411     0049  3A80               	xorlw	128
   412     004A  00DF               	movwf	btemp+1
   413     004B  3081               	movlw	129
   414     004C  025F               	subwf	btemp+1,w
   415     004D  1D03               	skipz
   416     004E  2851               	goto	u23_25
   417     004F  30F5               	movlw	245
   418     0050  0222               	subwf	_voltageX10,w	;volatile
   419     0051                     u23_25:
   420     0051  1C03               	skipc
   421     0052  2854               	goto	u23_21
   422     0053  2855               	goto	u23_20
   423     0054                     u23_21:
   424     0054  2861               	goto	i1l740
   425     0055                     u23_20:
   426     0055                     i1l736:
   427                           
   428                           ;main.c: 43: 
   429     0055  3001               	movlw	1
   430     0056  1283               	bcf	3,5	;RP0=0, select bank0
   431     0057  00A9               	movwf	driveLED@i
   432     0058  3000               	movlw	0
   433     0059  00AA               	movwf	driveLED@i+1
   434     005A  20E6               	fcall	_driveLED
   435     005B                     i1l738:
   436                           
   437                           ;main.c: 44:     TMR0IF = 0;
   438     005B  3001               	movlw	1
   439     005C  1283               	bcf	3,5	;RP0=0, select bank0
   440     005D  00A0               	movwf	_enableCounter	;volatile
   441     005E  3000               	movlw	0
   442     005F  00A1               	movwf	_enableCounter+1	;volatile
   443                           
   444                           ;main.c: 45:     TMR0 = 0;
   445     0060  2886               	goto	i1l750
   446     0061                     i1l740:
   447     0061  1283               	bcf	3,5	;RP0=0, select bank0
   448     0062  0823               	movf	_voltageX10+1,w	;volatile
   449     0063  3A80               	xorlw	128
   450     0064  00DF               	movwf	btemp+1
   451     0065  3080               	movlw	128
   452     0066  025F               	subwf	btemp+1,w
   453     0067  1D03               	skipz
   454     0068  286B               	goto	u24_25
   455     0069  3065               	movlw	101
   456     006A  0222               	subwf	_voltageX10,w	;volatile
   457     006B                     u24_25:
   458     006B  1C03               	skipc
   459     006C  286E               	goto	u24_21
   460     006D  286F               	goto	u24_20
   461     006E                     u24_21:
   462     006E  2886               	goto	i1l750
   463     006F                     u24_20:
   464     006F                     i1l742:
   465     006F  1283               	bcf	3,5	;RP0=0, select bank0
   466     0070  0823               	movf	_voltageX10+1,w	;volatile
   467     0071  3A80               	xorlw	128
   468     0072  00DF               	movwf	btemp+1
   469     0073  3081               	movlw	129
   470     0074  025F               	subwf	btemp+1,w
   471     0075  1D03               	skipz
   472     0076  2879               	goto	u25_25
   473     0077  30F5               	movlw	245
   474     0078  0222               	subwf	_voltageX10,w	;volatile
   475     0079                     u25_25:
   476     0079  1803               	skipnc
   477     007A  287C               	goto	u25_21
   478     007B  287D               	goto	u25_20
   479     007C                     u25_21:
   480     007C  2886               	goto	i1l750
   481     007D                     u25_20:
   482     007D                     i1l744:
   483                           
   484                           ;main.c: 46: }
   485     007D  3000               	movlw	0
   486     007E  1283               	bcf	3,5	;RP0=0, select bank0
   487     007F  00A9               	movwf	driveLED@i
   488     0080  00AA               	movwf	driveLED@i+1
   489     0081  20E6               	fcall	_driveLED
   490     0082                     i1l746:
   491                           
   492                           ;main.c: 47: 
   493     0082  1283               	bcf	3,5	;RP0=0, select bank0
   494     0083  01A0               	clrf	_enableCounter	;volatile
   495     0084  01A1               	clrf	_enableCounter+1	;volatile
   496     0085                     i1l748:
   497                           
   498                           ;main.c: 48: void driveLED(int i){
   499     0085  1105               	bcf	5,2	;volatile
   500     0086                     i1l750:	
   501                           ;main.c: 49:     if(i == 0){
   502                           
   503                           
   504                           ;main.c: 52:         GP5= 1;
   505     0086  1283               	bcf	3,5	;RP0=0, select bank0
   506     0087  01A8               	clrf	_counter	;volatile
   507     0088                     i1l752:
   508                           
   509                           ;main.c: 57: 
   510     0088  3064               	movlw	100
   511     0089  0626               	xorwf	_timerminutes,w	;volatile
   512     008A  0427               	iorwf	_timerminutes+1,w	;volatile
   513     008B  1D03               	btfss	3,2
   514     008C  288E               	goto	u26_21
   515     008D  288F               	goto	u26_20
   516     008E                     u26_21:
   517     008E  2899               	goto	i1l762
   518     008F                     u26_20:
   519     008F                     i1l754:
   520                           
   521                           ;main.c: 58: 
   522     008F  3000               	movlw	0
   523     0090  00A9               	movwf	driveLED@i
   524     0091  00AA               	movwf	driveLED@i+1
   525     0092  20E6               	fcall	_driveLED
   526     0093                     i1l756:
   527                           
   528                           ;main.c: 59: void main(void) {
   529     0093  1283               	bcf	3,5	;RP0=0, select bank0
   530     0094  01A0               	clrf	_enableCounter	;volatile
   531     0095  01A1               	clrf	_enableCounter+1	;volatile
   532     0096                     i1l758:
   533                           
   534                           ;main.c: 60:     TRISIO = 0b00000001;
   535     0096  01A6               	clrf	_timerminutes	;volatile
   536     0097  01A7               	clrf	_timerminutes+1	;volatile
   537     0098                     i1l760:
   538                           
   539                           ;main.c: 61:     CMCON = 7;
   540     0098  1505               	bsf	5,2	;volatile
   541     0099                     i1l762:
   542                           
   543                           ;main.c: 64:     ADON=1;
   544     0099  110B               	bcf	11,2	;volatile
   545     009A                     i1l764:
   546                           
   547                           ;main.c: 65:     WPU = 0X00;
   548     009A  0181               	clrf	1	;volatile
   549     009B                     i1l59:
   550     009B  0831               	movf	??_isr+2,w
   551     009C  0830               	movf	??_isr+1,w
   552     009D  008A               	movwf	10
   553     009E  0E2F               	swapf	??_isr,w
   554     009F  0083               	movwf	3
   555     00A0  0EDE               	swapf	btemp,f
   556     00A1  0E5E               	swapf	btemp,w
   557     00A2  0009               	retfie
   558     00A3                     __end_of_isr:
   559                           
   560                           	psect	intentry
   561     0004                     __pintentry:	
   562                           ;incstack = 0
   563                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   564                           
   565     0004                     interrupt_function:
   566     005E                     saved_w	set	btemp
   567     0004  00DE               	movwf	btemp
   568     0005  0E03               	swapf	3,w
   569     0006  1283               	bcf	3,5	;RP0=0, select bank0
   570     0007  00AF               	movwf	??_isr
   571     0008  080A               	movf	10,w
   572     0009  00B0               	movwf	??_isr+1
   573     000A  085F               	movf	btemp+1,w
   574     000B  00B1               	movwf	??_isr+2
   575     000C  281A               	ljmp	_isr
   576                           
   577                           	psect	text2
   578     00E6                     __ptext2:	
   579 ;; *************** function _driveLED *****************
   580 ;; Defined at:
   581 ;;		line 68 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  i               2    0[BANK0 ] int 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0
   595 ;;      Params:         0       2
   596 ;;      Locals:         0       0
   597 ;;      Temps:          0       0
   598 ;;      Totals:         0       2
   599 ;;Total ram usage:        2 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_isr
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608     00E6                     _driveLED:	
   609                           ;psect for function _driveLED
   610                           
   611     00E6                     i1l698:	
   612                           ;incstack = 0
   613                           ; Regs used in _driveLED: [wreg+status,2+status,0]
   614                           
   615                           
   616                           ;main.c: 69:     INTCON = 0b11100000;
   617     00E6  1283               	bcf	3,5	;RP0=0, select bank0
   618     00E7  0829               	movf	driveLED@i,w
   619     00E8  042A               	iorwf	driveLED@i+1,w
   620     00E9  1D03               	btfss	3,2
   621     00EA  28EC               	goto	u14_21
   622     00EB  28ED               	goto	u14_20
   623     00EC                     u14_21:
   624     00EC  28EF               	goto	i1l702
   625     00ED                     u14_20:
   626     00ED                     i1l700:
   627                           
   628                           ;main.c: 70: 
   629     00ED  1285               	bcf	5,5	;volatile
   630                           
   631                           ;main.c: 71:     GP2= 0;
   632     00EE  28F6               	goto	i1l66
   633     00EF                     i1l702:
   634     00EF  0329               	decf	driveLED@i,w
   635     00F0  042A               	iorwf	driveLED@i+1,w
   636     00F1  1D03               	btfss	3,2
   637     00F2  28F4               	goto	u15_21
   638     00F3  28F5               	goto	u15_20
   639     00F4                     u15_21:
   640     00F4  28F6               	goto	i1l66
   641     00F5                     u15_20:
   642     00F5                     i1l704:
   643                           
   644                           ;main.c: 72:     GP5= 0;
   645     00F5  1685               	bsf	5,5	;volatile
   646     00F6                     i1l66:	
   647                           ;main.c: 73: 
   648                           
   649     00F6  0008               	return
   650     00F7                     __end_of_driveLED:
   651                           
   652                           	psect	text3
   653     00A3                     __ptext3:	
   654 ;; *************** function ___wmul *****************
   655 ;; Defined at:
   656 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  multiplier      2    0[BANK0 ] unsigned int 
   659 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  product         2    4[BANK0 ] unsigned int 
   662 ;; Return value:  Size  Location     Type
   663 ;;                  2    0[BANK0 ] unsigned int 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0
   671 ;;      Params:         0       4
   672 ;;      Locals:         0       2
   673 ;;      Temps:          0       0
   674 ;;      Totals:         0       6
   675 ;;Total ram usage:        6 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_isr
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684     00A3                     ___wmul:	
   685                           ;psect for function ___wmul
   686                           
   687     00A3                     i1l706:	
   688                           ;incstack = 0
   689                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   690                           
   691     00A3  1283               	bcf	3,5	;RP0=0, select bank0
   692     00A4  01AD               	clrf	___wmul@product
   693     00A5  01AE               	clrf	___wmul@product+1
   694     00A6                     i1l708:
   695     00A6  1C29               	btfss	___wmul@multiplier,0
   696     00A7  28A9               	goto	u16_21
   697     00A8  28AA               	goto	u16_20
   698     00A9                     u16_21:
   699     00A9  28B0               	goto	i1l160
   700     00AA                     u16_20:
   701     00AA                     i1l710:
   702     00AA  082B               	movf	___wmul@multiplicand,w
   703     00AB  07AD               	addwf	___wmul@product,f
   704     00AC  1803               	skipnc
   705     00AD  0AAE               	incf	___wmul@product+1,f
   706     00AE  082C               	movf	___wmul@multiplicand+1,w
   707     00AF  07AE               	addwf	___wmul@product+1,f
   708     00B0                     i1l160:
   709     00B0  3001               	movlw	1
   710     00B1                     u17_25:
   711     00B1  1003               	clrc
   712     00B2  0DAB               	rlf	___wmul@multiplicand,f
   713     00B3  0DAC               	rlf	___wmul@multiplicand+1,f
   714     00B4  3EFF               	addlw	-1
   715     00B5  1D03               	skipz
   716     00B6  28B1               	goto	u17_25
   717     00B7                     i1l712:
   718     00B7  3001               	movlw	1
   719     00B8                     u18_25:
   720     00B8  1003               	clrc
   721     00B9  0CAA               	rrf	___wmul@multiplier+1,f
   722     00BA  0CA9               	rrf	___wmul@multiplier,f
   723     00BB  3EFF               	addlw	-1
   724     00BC  1D03               	skipz
   725     00BD  28B8               	goto	u18_25
   726     00BE                     i1l714:
   727     00BE  0829               	movf	___wmul@multiplier,w
   728     00BF  042A               	iorwf	___wmul@multiplier+1,w
   729     00C0  1D03               	btfss	3,2
   730     00C1  28C3               	goto	u19_21
   731     00C2  28C4               	goto	u19_20
   732     00C3                     u19_21:
   733     00C3  28A6               	goto	i1l708
   734     00C4                     u19_20:
   735     00C4                     i1l716:
   736     00C4  082E               	movf	___wmul@product+1,w
   737     00C5  00AA               	movwf	?___wmul+1
   738     00C6  082D               	movf	___wmul@product,w
   739     00C7  00A9               	movwf	?___wmul
   740     00C8                     i1l162:
   741     00C8  0008               	return
   742     00C9                     __end_of___wmul:
   743     005E                     btemp	set	94	;btemp
   744     005E                     wtemp0	set	94
   745                           
   746                           	psect	config
   747                           
   748                           ;Config register CONFIG @ 0x2007
   749                           ;	Oscillator Selection bits
   750                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   751                           ;	Watchdog Timer Enable bit
   752                           ;	WDTE = OFF, WDT disabled
   753                           ;	Power-Up Timer Enable bit
   754                           ;	PWRTE = ON, PWRT enabled
   755                           ;	GP3/MCLR pin function select
   756                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   757                           ;	Brown-out Detect Enable bit
   758                           ;	BOREN = OFF, BOD disabled
   759                           ;	Code Protection bit
   760                           ;	CP = OFF, Program Memory code protection is disabled
   761                           ;	Data Code Protection bit
   762                           ;	CPD = OFF, Data memory code protection is disabled
   763     2007                     	org	8199
   764     2007  3184               	dw	12676

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      9      18

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___wmul

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0     516
                                              6 BANK0      3     3      0
                             ___wmul
                           _driveLED
 ---------------------------------------------------------------------------------
 (2) _driveLED                                             2     0      2     272
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___wmul
   _driveLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      9      12       4       29.0%
ABS                  0      0      12       5        0.0%
DATA                 0      0      12       6        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Feb 04 21:27:26 2025

                     l71 00E4                       l72 00E4      ___wmul@multiplicand 002B  
                    l770 00D6                      l772 00D8                      l774 00E1  
                    l766 00C9                      l776 00E3                      l768 00D5  
                    _GP2 002A                      _GP5 002D                      _WPU 0095  
                    _isr 001A                     ?_isr 0029                     _ADON 00F8  
                   i1l51 0030                     i1l66 00F6                     i1l59 009B  
                   _TMR0 0001                     _main 00C9                     btemp 005E  
                   start 000D                    ??_isr 002F                    ?_main 0029  
                  _CMCON 0019                    _ANSEL 009F                    i1l160 00B0  
                  i1l162 00C8                    i1l700 00ED                    i1l710 00AA  
                  i1l702 00EF                    i1l712 00B7                    i1l704 00F5  
                  i1l720 001A                    i1l714 00BE                    i1l706 00A3  
                  i1l730 0034                    i1l722 001E                    i1l716 00C4  
                  i1l708 00A6                    i1l740 0061                    i1l732 003A  
                  i1l724 0024                    i1l742 006F                    i1l750 0086  
                  i1l734 0048                    i1l726 002A                    i1l760 0098  
                  i1l744 007D                    i1l736 0055                    i1l728 002F  
                  i1l752 0088                    i1l754 008F                    i1l762 0099  
                  i1l746 0082                    i1l738 005B                    i1l764 009A  
                  i1l756 0093                    i1l748 0085                    i1l758 0096  
                  i1l698 00E6                    u20_20 0024                    u20_21 0023  
                  u21_20 002F                    u21_21 002E                    u14_20 00ED  
                  u22_20 0034                    u14_21 00EC                    u22_21 0033  
                  u15_20 00F5                    u23_20 0055                    u15_21 00F4  
                  u23_21 0054                    u23_25 0051                    u16_20 00AA  
                  u24_20 006F                    u16_21 00A9                    u24_21 006E  
                  u24_25 006B                    u25_20 007D                    u25_21 007C  
                  u17_25 00B1                    u25_25 0079                    u26_20 008F  
                  u26_21 008E                    u18_25 00B8                    u19_20 00C4  
                  u19_21 00C3                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000E             __end_of_main 00E6  
                 ??_main 0000                   _ADCON0 001F                   _ADRESH 001E  
                 _ADRESL 009E                   _INTCON 000B                   _OSCCAL 0090  
                 _TMR0IF 005A                   _TRISIO 0085         __end_of_driveLED 00F7  
                 ___wmul 00A3                   saved_w 005E  __end_of__initialization 0018  
         __pcstackCOMMON 0000               __pbssBANK0 0020               __pmaintext 00C9  
                ?___wmul 0029               __pintentry 0004                ?_driveLED 0029  
                __ptext1 001A                  __ptext2 00E6                  __ptext3 00A3  
                _counter 0028                  _reading 0024     end_of_initialization 0018  
             ??_driveLED 0000               _voltageX10 0022           __end_of___wmul 00C9  
    start_initialization 000E              __end_of_isr 00A3                 ??___wmul 0000  
              ___latbits 0000            __pcstackBANK0 0029        interrupt_function 0004  
         ___wmul@product 002D                 _GO_nDONE 00F9        ___wmul@multiplier 0029  
          _enableCounter 0020                driveLED@i 0029                 _driveLED 00E6  
               intlevel1 0000               _OPTION_REG 0081             _timerminutes 0026  
