

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Feb 17 20:29:24 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x5E,2
    18     0000                     
    19                           ; Generated 17/08/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F675 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0019                     	;# 
    67     001E                     	;# 
    68     001F                     	;# 
    69     0081                     	;# 
    70     0085                     	;# 
    71     008C                     	;# 
    72     008E                     	;# 
    73     0090                     	;# 
    74     0095                     	;# 
    75     0096                     	;# 
    76     0096                     	;# 
    77     0099                     	;# 
    78     009A                     	;# 
    79     009A                     	;# 
    80     009B                     	;# 
    81     009C                     	;# 
    82     009D                     	;# 
    83     009E                     	;# 
    84     009F                     	;# 
    85     0000                     	;# 
    86     0001                     	;# 
    87     0002                     	;# 
    88     0003                     	;# 
    89     0004                     	;# 
    90     0005                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0019                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     008C                     	;# 
   104     008E                     	;# 
   105     0090                     	;# 
   106     0095                     	;# 
   107     0096                     	;# 
   108     0096                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009A                     	;# 
   112     009B                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117                           
   118                           	psect	idataBANK0
   119     01B1                     __pidataBANK0:
   120                           
   121                           ;initializer for _selectedTime
   122     01B1  3403               	retlw	3
   123     01B2  3400               	retlw	0
   124                           
   125                           ;initializer for _firstPass
   126     01B3  3401               	retlw	1
   127     01B4  3400               	retlw	0
   128     000B                     _INTCON	set	11
   129     001F                     _ADCON0	set	31
   130     0019                     _CMCON	set	25
   131     0001                     _TMR0	set	1
   132     001E                     _ADRESH	set	30
   133     00F8                     _ADON	set	248
   134     002D                     _GP5	set	45
   135     005A                     _TMR0IF	set	90
   136     002A                     _GP2	set	42
   137     00F9                     _GO_nDONE	set	249
   138     0081                     _OPTION_REG	set	129
   139     0090                     _OSCCAL	set	144
   140     0095                     _WPU	set	149
   141     009F                     _ANSEL	set	159
   142     0085                     _TRISIO	set	133
   143     009E                     _ADRESL	set	158
   144                           
   145                           	psect	cinit
   146     000E                     start_initialization:	
   147                           ; #config settings
   148                           
   149     000E                     __initialization:
   150                           
   151                           ; Initialize objects allocated to BANK0
   152     000E  21B1               	fcall	__pidataBANK0	;fetch initializer
   153     000F  00C2               	movwf	__pdataBANK0& (0+127)
   154     0010  21B2               	fcall	__pidataBANK0+1	;fetch initializer
   155     0011  00C3               	movwf	(__pdataBANK0+1)& (0+127)
   156     0012  21B3               	fcall	__pidataBANK0+2	;fetch initializer
   157     0013  00C4               	movwf	(__pdataBANK0+2)& (0+127)
   158     0014  21B4               	fcall	__pidataBANK0+3	;fetch initializer
   159     0015  00C5               	movwf	(__pdataBANK0+3)& (0+127)
   160                           
   161                           ; Clear objects allocated to BANK0
   162     0016  1383               	bcf	3,7	;select IRP bank0
   163     0017  3020               	movlw	low __pbssBANK0
   164     0018  0084               	movwf	4
   165     0019  3039               	movlw	low (__pbssBANK0+25)
   166     001A  21A9               	fcall	clear_ram0
   167     001B                     end_of_initialization:	
   168                           ;End of C runtime variable initialization code
   169                           
   170     001B                     __end_of__initialization:
   171     001B  0183               	clrf	3
   172     001C  297B               	ljmp	_main	;jump to C main() function
   173                           
   174                           	psect	bssBANK0
   175     0020                     __pbssBANK0:
   176     0020                     _enable:
   177     0020                     	ds	2
   178     0022                     _previousClick:
   179     0022                     	ds	2
   180     0024                     _enableButtonCounter:
   181     0024                     	ds	2
   182     0026                     _buttonPressed:
   183     0026                     	ds	2
   184     0028                     _buttonCounter:
   185     0028                     	ds	2
   186     002A                     _ledBlinkCounter:
   187     002A                     	ds	2
   188     002C                     _buzzerCount:
   189     002C                     	ds	2
   190     002E                     _activateBuzzer:
   191     002E                     	ds	2
   192     0030                     _enableCounter:
   193     0030                     	ds	2
   194     0032                     _voltageX10:
   195     0032                     	ds	2
   196     0034                     _reading:
   197     0034                     	ds	2
   198     0036                     _timerminutes:
   199     0036                     	ds	2
   200     0038                     _counter:
   201     0038                     	ds	1
   202                           
   203                           	psect	dataBANK0
   204     0042                     __pdataBANK0:
   205     0042                     _selectedTime:
   206     0042                     	ds	2
   207     0044                     _firstPass:
   208     0044                     	ds	2
   209                           
   210                           	psect	clrtext
   211     01A9                     clear_ram0:	
   212                           ;	Called with FSR containing the base address, and
   213                           ;	W with the last address+1
   214                           
   215     01A9  0064               	clrwdt	;clear the watchdog before getting into this loop
   216     01AA                     clrloop0:
   217     01AA  0180               	clrf	0	;clear RAM location pointed to by FSR
   218     01AB  0A84               	incf	4,f	;increment pointer
   219     01AC  0604               	xorwf	4,w	;XOR with final address
   220     01AD  1903               	btfsc	3,2	;have we reached the end yet?
   221     01AE  3400               	retlw	0	;all done for this memory range, return
   222     01AF  0604               	xorwf	4,w	;XOR again to restore value
   223     01B0  29AA               	goto	clrloop0	;do the next byte
   224                           
   225                           	psect	cstackCOMMON
   226     0000                     __pcstackCOMMON:
   227     0000                     ??_driveLED:
   228     0000                     ??_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231     0000                     ??___wmul:	
   232                           ; 1 bytes @ 0x0
   233                           
   234                           
   235                           	psect	cstackBANK0
   236     0039                     __pcstackBANK0:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0039                     ?_driveLED:
   240     0039                     ?_isr:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0039                     ?_main:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0039                     ?___wmul:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0039                     driveLED@i:	
   250                           ; 2 bytes @ 0x0
   251                           
   252     0039                     ___wmul@multiplier:	
   253                           ; 2 bytes @ 0x0
   254                           
   255                           
   256                           ; 2 bytes @ 0x0
   257     0039                     	ds	2
   258     003B                     ___wmul@multiplicand:
   259                           
   260                           ; 2 bytes @ 0x2
   261     003B                     	ds	2
   262     003D                     ___wmul@product:
   263                           
   264                           ; 2 bytes @ 0x4
   265     003D                     	ds	2
   266     003F                     ??_isr:
   267                           
   268                           ; 1 bytes @ 0x6
   269     003F                     	ds	3
   270                           
   271                           	psect	maintext
   272     017B                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 132 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0
   292 ;;      Params:         0       0
   293 ;;      Locals:         0       0
   294 ;;      Temps:          0       0
   295 ;;      Totals:         0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called: 2
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305     017B                     _main:	
   306                           ;psect for function _main
   307                           
   308     017B                     l902:	
   309                           ;incstack = 0
   310                           ; Regs used in _main: [wreg+status,2]
   311                           
   312                           
   313                           ;main.c: 133: }
   314     017B  3001               	movlw	1
   315     017C  1683               	bsf	3,5	;RP0=1, select bank1
   316     017D  0085               	movwf	5	;volatile
   317     017E  3007               	movlw	7
   318     017F  1283               	bcf	3,5	;RP0=0, select bank0
   319     0180  0099               	movwf	25	;volatile
   320     0181  3011               	movlw	17
   321     0182  1683               	bsf	3,5	;RP0=1, select bank1
   322     0183  009F               	movwf	31	;volatile
   323     0184  3080               	movlw	128
   324     0185  1283               	bcf	3,5	;RP0=0, select bank0
   325     0186  009F               	movwf	31	;volatile
   326     0187                     l904:
   327     0187  141F               	bsf	31,0	;volatile
   328     0188                     l906:
   329     0188  1683               	bsf	3,5	;RP0=1, select bank1
   330     0189  0195               	clrf	21	;volatile
   331     018A                     l908:
   332     018A  1283               	bcf	3,5	;RP0=0, select bank0
   333     018B  0181               	clrf	1	;volatile
   334     018C  30FF               	movlw	255
   335     018D  1683               	bsf	3,5	;RP0=1, select bank1
   336     018E  0090               	movwf	16	;volatile
   337     018F  3087               	movlw	135
   338     0190  0081               	movwf	1	;volatile
   339     0191  30E0               	movlw	224
   340     0192  008B               	movwf	11	;volatile
   341     0193                     l910:
   342     0193  1283               	bcf	3,5	;RP0=0, select bank0
   343     0194  1105               	bcf	5,2	;volatile
   344     0195                     l912:
   345     0195  1285               	bcf	5,5	;volatile
   346     0196                     l107:
   347     0196                     l108:
   348     0196  2996               	goto	l107
   349     0197  280D               	ljmp	start
   350     0198                     __end_of_main:
   351                           
   352                           	psect	text1
   353     001D                     __ptext1:	
   354 ;; *************** function _isr *****************
   355 ;; Defined at:
   356 ;;		line 39 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0
   370 ;;      Params:         0       0
   371 ;;      Locals:         0       0
   372 ;;      Temps:          0       3
   373 ;;      Totals:         0       3
   374 ;;Total ram usage:        3 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 1
   377 ;; This function calls:
   378 ;;		___wmul
   379 ;;		_driveLED
   380 ;; This function is called by:
   381 ;;		Interrupt level 1
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385     001D                     _isr:	
   386                           ;psect for function _isr
   387                           
   388     001D                     i1l806:
   389                           
   390                           ;main.c: 42:             selectedTime= 60;
   391     001D  3001               	movlw	1
   392     001E  07A8               	addwf	_buttonCounter,f	;volatile
   393     001F  1803               	skipnc
   394     0020  0AA9               	incf	_buttonCounter+1,f	;volatile
   395     0021  3000               	movlw	0
   396     0022  07A9               	addwf	_buttonCounter+1,f	;volatile
   397     0023                     i1l808:
   398                           
   399                           ;main.c: 43:         }else if(buttonPressed == 4){
   400     0023  0330               	decf	_enableCounter,w	;volatile
   401     0024  0431               	iorwf	_enableCounter+1,w	;volatile
   402     0025  1D03               	btfss	3,2
   403     0026  2828               	goto	u31_21
   404     0027  2829               	goto	u31_20
   405     0028                     u31_21:
   406     0028  2833               	goto	i1l812
   407     0029                     u31_20:
   408     0029                     i1l810:
   409                           
   410                           ;main.c: 44:             selectedTime= 80;
   411     0029  3001               	movlw	1
   412     002A  07B6               	addwf	_timerminutes,f	;volatile
   413     002B  1803               	skipnc
   414     002C  0AB7               	incf	_timerminutes+1,f	;volatile
   415     002D  3000               	movlw	0
   416     002E  07B7               	addwf	_timerminutes+1,f	;volatile
   417                           
   418                           ;main.c: 45:         }
   419     002F  3001               	movlw	1
   420     0030  00C4               	movwf	_firstPass	;volatile
   421     0031  3000               	movlw	0
   422     0032  00C5               	movwf	_firstPass+1	;volatile
   423     0033                     i1l812:
   424                           
   425                           ;main.c: 47: 
   426     0033  0324               	decf	_enableButtonCounter,w	;volatile
   427     0034  0425               	iorwf	_enableButtonCounter+1,w	;volatile
   428     0035  1D03               	btfss	3,2
   429     0036  2838               	goto	u32_21
   430     0037  2839               	goto	u32_20
   431     0038                     u32_21:
   432     0038  2841               	goto	i1l818
   433     0039                     u32_20:
   434     0039                     i1l814:
   435                           
   436                           ;main.c: 48: 
   437     0039  01A4               	clrf	_enableButtonCounter	;volatile
   438     003A  01A5               	clrf	_enableButtonCounter+1	;volatile
   439     003B                     i1l816:
   440                           
   441                           ;main.c: 49:     GO_nDONE= 1;
   442     003B  3001               	movlw	1
   443     003C  07A6               	addwf	_buttonPressed,f	;volatile
   444     003D  1803               	skipnc
   445     003E  0AA7               	incf	_buttonPressed+1,f	;volatile
   446     003F  3000               	movlw	0
   447     0040  07A7               	addwf	_buttonPressed+1,f	;volatile
   448     0041                     i1l818:
   449                           
   450                           ;main.c: 53: 
   451     0041  0829               	movf	_buttonCounter+1,w	;volatile
   452     0042  3A80               	xorlw	128
   453     0043  00DF               	movwf	btemp+1
   454     0044  3080               	movlw	128
   455     0045  025F               	subwf	btemp+1,w
   456     0046  1D03               	skipz
   457     0047  284A               	goto	u33_25
   458     0048  302F               	movlw	47
   459     0049  0228               	subwf	_buttonCounter,w	;volatile
   460     004A                     u33_25:
   461     004A  1C03               	skipc
   462     004B  284D               	goto	u33_21
   463     004C  284E               	goto	u33_20
   464     004D                     u33_21:
   465     004D  2888               	goto	i1l840
   466     004E                     u33_20:
   467     004E                     i1l820:
   468                           
   469                           ;main.c: 54:     if(voltageX10 > 500){
   470     004E  3001               	movlw	1
   471     004F  1283               	bcf	3,5	;RP0=0, select bank0
   472     0050  00A0               	movwf	_enable	;volatile
   473     0051  3000               	movlw	0
   474     0052  00A1               	movwf	_enable+1	;volatile
   475                           
   476                           ;main.c: 55: 
   477     0053  3001               	movlw	1
   478     0054  00AE               	movwf	_activateBuzzer	;volatile
   479     0055  3000               	movlw	0
   480     0056  00AF               	movwf	_activateBuzzer+1	;volatile
   481     0057                     i1l822:
   482                           
   483                           ;main.c: 56:         enableCounter= 1;
   484     0057  01A8               	clrf	_buttonCounter	;volatile
   485     0058  01A9               	clrf	_buttonCounter+1	;volatile
   486     0059                     i1l824:
   487                           
   488                           ;main.c: 57:         previousClick= 1;
   489     0059  0326               	decf	_buttonPressed,w	;volatile
   490     005A  0427               	iorwf	_buttonPressed+1,w	;volatile
   491     005B  1D03               	btfss	3,2
   492     005C  285E               	goto	u34_21
   493     005D  285F               	goto	u34_20
   494     005E                     u34_21:
   495     005E  2864               	goto	i1l828
   496     005F                     u34_20:
   497     005F                     i1l826:
   498                           
   499                           ;main.c: 58:     }else if(voltageX10 > 100 && voltageX10 <= 500){
   500     005F  3014               	movlw	20
   501     0060  00C2               	movwf	_selectedTime	;volatile
   502     0061  3000               	movlw	0
   503     0062  00C3               	movwf	_selectedTime+1	;volatile
   504                           
   505                           ;main.c: 59:        driveLED(0);
   506     0063  2888               	goto	i1l840
   507     0064                     i1l828:
   508     0064  3002               	movlw	2
   509     0065  0626               	xorwf	_buttonPressed,w	;volatile
   510     0066  0427               	iorwf	_buttonPressed+1,w	;volatile
   511     0067  1D03               	btfss	3,2
   512     0068  286A               	goto	u35_21
   513     0069  286B               	goto	u35_20
   514     006A                     u35_21:
   515     006A  2870               	goto	i1l832
   516     006B                     u35_20:
   517     006B                     i1l830:
   518                           
   519                           ;main.c: 60:        enableCounter= 0;
   520     006B  3028               	movlw	40
   521     006C  00C2               	movwf	_selectedTime	;volatile
   522     006D  3000               	movlw	0
   523     006E  00C3               	movwf	_selectedTime+1	;volatile
   524                           
   525                           ;main.c: 61:        if(GP2 == 0){
   526     006F  2888               	goto	i1l840
   527     0070                     i1l832:
   528     0070  3003               	movlw	3
   529     0071  0626               	xorwf	_buttonPressed,w	;volatile
   530     0072  0427               	iorwf	_buttonPressed+1,w	;volatile
   531     0073  1D03               	btfss	3,2
   532     0074  2876               	goto	u36_21
   533     0075  2877               	goto	u36_20
   534     0076                     u36_21:
   535     0076  287C               	goto	i1l836
   536     0077                     u36_20:
   537     0077                     i1l834:
   538                           
   539                           ;main.c: 62:         activateBuzzer= 0;
   540     0077  303C               	movlw	60
   541     0078  00C2               	movwf	_selectedTime	;volatile
   542     0079  3000               	movlw	0
   543     007A  00C3               	movwf	_selectedTime+1	;volatile
   544                           
   545                           ;main.c: 63:        }
   546     007B  2888               	goto	i1l840
   547     007C                     i1l836:
   548     007C  3004               	movlw	4
   549     007D  0626               	xorwf	_buttonPressed,w	;volatile
   550     007E  0427               	iorwf	_buttonPressed+1,w	;volatile
   551     007F  1D03               	btfss	3,2
   552     0080  2882               	goto	u37_21
   553     0081  2883               	goto	u37_20
   554     0082                     u37_21:
   555     0082  2888               	goto	i1l73
   556     0083                     u37_20:
   557     0083                     i1l838:
   558                           
   559                           ;main.c: 64: 
   560     0083  3050               	movlw	80
   561     0084  00C2               	movwf	_selectedTime	;volatile
   562     0085  3000               	movlw	0
   563     0086  00C3               	movwf	_selectedTime+1	;volatile
   564     0087  2888               	goto	i1l840
   565     0088                     i1l73:
   566     0088                     i1l840:
   567                           
   568                           ;main.c: 69: 
   569     0088  1283               	bcf	3,5	;RP0=0, select bank0
   570     0089  149F               	bsf	31,1	;volatile
   571     008A                     i1l79:	
   572                           ;main.c: 70: 
   573                           
   574     008A  189F               	btfsc	31,1	;volatile
   575     008B  288D               	goto	u38_21
   576     008C  288E               	goto	u38_20
   577     008D                     u38_21:
   578     008D  288A               	goto	i1l79
   579     008E                     u38_20:
   580     008E                     i1l842:
   581                           
   582                           ;main.c: 71:         }
   583     008E  081E               	movf	30,w	;volatile
   584     008F  00B5               	movwf	_reading+1	;volatile
   585     0090  1683               	bsf	3,5	;RP0=1, select bank1
   586     0091  081E               	movf	30,w	;volatile
   587     0092  1283               	bcf	3,5	;RP0=0, select bank0
   588     0093  00B4               	movwf	_reading	;volatile
   589     0094                     i1l844:
   590                           
   591                           ;main.c: 72:         previousClick= 0;
   592     0094  0835               	movf	_reading+1,w	;volatile
   593     0095  00BA               	movwf	___wmul@multiplier+1
   594     0096  0834               	movf	_reading,w	;volatile
   595     0097  00B9               	movwf	___wmul@multiplier
   596     0098  3005               	movlw	5
   597     0099  00BB               	movwf	___wmul@multiplicand
   598     009A  3000               	movlw	0
   599     009B  00BC               	movwf	___wmul@multiplicand+1
   600     009C  2155               	fcall	___wmul
   601     009D  1283               	bcf	3,5	;RP0=0, select bank0
   602     009E  083A               	movf	?___wmul+1,w
   603     009F  00B3               	movwf	_voltageX10+1	;volatile
   604     00A0  0839               	movf	?___wmul,w
   605     00A1  00B2               	movwf	_voltageX10	;volatile
   606     00A2                     i1l846:
   607                           
   608                           ;main.c: 74: 
   609     00A2  0833               	movf	_voltageX10+1,w	;volatile
   610     00A3  3A80               	xorlw	128
   611     00A4  00DF               	movwf	btemp+1
   612     00A5  3081               	movlw	129
   613     00A6  025F               	subwf	btemp+1,w
   614     00A7  1D03               	skipz
   615     00A8  28AB               	goto	u39_25
   616     00A9  30F5               	movlw	245
   617     00AA  0232               	subwf	_voltageX10,w	;volatile
   618     00AB                     u39_25:
   619     00AB  1C03               	skipc
   620     00AC  28AE               	goto	u39_21
   621     00AD  28AF               	goto	u39_20
   622     00AE                     u39_21:
   623     00AE  28B9               	goto	i1l850
   624     00AF                     u39_20:
   625     00AF                     i1l848:
   626                           
   627                           ;main.c: 76:         enable= 0;
   628     00AF  3001               	movlw	1
   629     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   630     00B1  00B0               	movwf	_enableCounter	;volatile
   631     00B2  3000               	movlw	0
   632     00B3  00B1               	movwf	_enableCounter+1	;volatile
   633                           
   634                           ;main.c: 77:         driveLED(1);
   635     00B4  3001               	movlw	1
   636     00B5  00A2               	movwf	_previousClick	;volatile
   637     00B6  3000               	movlw	0
   638     00B7  00A3               	movwf	_previousClick+1	;volatile
   639                           
   640                           ;main.c: 78:         enableCounter= 0;
   641     00B8  28F1               	goto	i1l868
   642     00B9                     i1l850:
   643     00B9  1283               	bcf	3,5	;RP0=0, select bank0
   644     00BA  0833               	movf	_voltageX10+1,w	;volatile
   645     00BB  3A80               	xorlw	128
   646     00BC  00DF               	movwf	btemp+1
   647     00BD  3080               	movlw	128
   648     00BE  025F               	subwf	btemp+1,w
   649     00BF  1D03               	skipz
   650     00C0  28C3               	goto	u40_25
   651     00C1  3065               	movlw	101
   652     00C2  0232               	subwf	_voltageX10,w	;volatile
   653     00C3                     u40_25:
   654     00C3  1C03               	skipc
   655     00C4  28C6               	goto	u40_21
   656     00C5  28C7               	goto	u40_20
   657     00C6                     u40_21:
   658     00C6  28E4               	goto	i1l862
   659     00C7                     u40_20:
   660     00C7                     i1l852:
   661     00C7  1283               	bcf	3,5	;RP0=0, select bank0
   662     00C8  0833               	movf	_voltageX10+1,w	;volatile
   663     00C9  3A80               	xorlw	128
   664     00CA  00DF               	movwf	btemp+1
   665     00CB  3081               	movlw	129
   666     00CC  025F               	subwf	btemp+1,w
   667     00CD  1D03               	skipz
   668     00CE  28D1               	goto	u41_25
   669     00CF  30F5               	movlw	245
   670     00D0  0232               	subwf	_voltageX10,w	;volatile
   671     00D1                     u41_25:
   672     00D1  1803               	skipnc
   673     00D2  28D4               	goto	u41_21
   674     00D3  28D5               	goto	u41_20
   675     00D4                     u41_21:
   676     00D4  28E4               	goto	i1l862
   677     00D5                     u41_20:
   678     00D5                     i1l854:
   679                           
   680                           ;main.c: 79:         timerminutes= 0;
   681     00D5  3000               	movlw	0
   682     00D6  1283               	bcf	3,5	;RP0=0, select bank0
   683     00D7  00B9               	movwf	driveLED@i
   684     00D8  00BA               	movwf	driveLED@i+1
   685     00D9  2198               	fcall	_driveLED
   686     00DA                     i1l856:
   687                           
   688                           ;main.c: 80:         activateBuzzer= 1;
   689     00DA  1283               	bcf	3,5	;RP0=0, select bank0
   690     00DB  01B0               	clrf	_enableCounter	;volatile
   691     00DC  01B1               	clrf	_enableCounter+1	;volatile
   692     00DD                     i1l858:
   693                           
   694                           ;main.c: 81:     }
   695     00DD  1905               	btfsc	5,2	;volatile
   696     00DE  28E0               	goto	u42_21
   697     00DF  28E1               	goto	u42_20
   698     00E0                     u42_21:
   699     00E0  28F1               	goto	i1l868
   700     00E1                     u42_20:
   701     00E1                     i1l860:
   702                           
   703                           ;main.c: 82: 
   704     00E1  01AE               	clrf	_activateBuzzer	;volatile
   705     00E2  01AF               	clrf	_activateBuzzer+1	;volatile
   706     00E3  28F1               	goto	i1l868
   707     00E4                     i1l862:
   708                           
   709                           ;main.c: 86:             GP2= 1;
   710     00E4  1283               	bcf	3,5	;RP0=0, select bank0
   711     00E5  0322               	decf	_previousClick,w	;volatile
   712     00E6  0423               	iorwf	_previousClick+1,w	;volatile
   713     00E7  1D03               	btfss	3,2
   714     00E8  28EA               	goto	u43_21
   715     00E9  28EB               	goto	u43_20
   716     00EA                     u43_21:
   717     00EA  28EF               	goto	i1l866
   718     00EB                     u43_20:
   719     00EB                     i1l864:
   720                           
   721                           ;main.c: 87:             driveLED(1);
   722     00EB  3001               	movlw	1
   723     00EC  00A4               	movwf	_enableButtonCounter	;volatile
   724     00ED  3000               	movlw	0
   725     00EE  00A5               	movwf	_enableButtonCounter+1	;volatile
   726     00EF                     i1l866:
   727                           
   728                           ;main.c: 92:             buzzerCount= 0;
   729     00EF  01A2               	clrf	_previousClick	;volatile
   730     00F0  01A3               	clrf	_previousClick+1	;volatile
   731     00F1                     i1l868:
   732                           
   733                           ;main.c: 95: 
   734     00F1  0837               	movf	_timerminutes+1,w	;volatile
   735     00F2  0643               	xorwf	_selectedTime+1,w	;volatile
   736     00F3  1D03               	skipz
   737     00F4  28F7               	goto	u44_25
   738     00F5  0836               	movf	_timerminutes,w	;volatile
   739     00F6  0642               	xorwf	_selectedTime,w	;volatile
   740     00F7                     u44_25:
   741     00F7  1D03               	skipz
   742     00F8  28FA               	goto	u44_21
   743     00F9  28FB               	goto	u44_20
   744     00FA                     u44_21:
   745     00FA  2911               	goto	i1l882
   746     00FB                     u44_20:
   747     00FB                     i1l870:
   748     00FB  0320               	decf	_enable,w	;volatile
   749     00FC  0421               	iorwf	_enable+1,w	;volatile
   750     00FD  1D03               	btfss	3,2
   751     00FE  2900               	goto	u45_21
   752     00FF  2901               	goto	u45_20
   753     0100                     u45_21:
   754     0100  2911               	goto	i1l882
   755     0101                     u45_20:
   756     0101                     i1l872:
   757                           
   758                           ;main.c: 96:     }
   759     0101  01A0               	clrf	_enable	;volatile
   760     0102  01A1               	clrf	_enable+1	;volatile
   761     0103                     i1l874:
   762                           
   763                           ;main.c: 97:     TMR0IF = 0;
   764     0103  3001               	movlw	1
   765     0104  00B9               	movwf	driveLED@i
   766     0105  3000               	movlw	0
   767     0106  00BA               	movwf	driveLED@i+1
   768     0107  2198               	fcall	_driveLED
   769     0108                     i1l876:
   770                           
   771                           ;main.c: 98:     TMR0 = 0;
   772     0108  1283               	bcf	3,5	;RP0=0, select bank0
   773     0109  01B0               	clrf	_enableCounter	;volatile
   774     010A  01B1               	clrf	_enableCounter+1	;volatile
   775     010B                     i1l878:
   776                           
   777                           ;main.c: 99: }
   778     010B  01B6               	clrf	_timerminutes	;volatile
   779     010C  01B7               	clrf	_timerminutes+1	;volatile
   780     010D                     i1l880:
   781                           
   782                           ;main.c: 100: 
   783     010D  3001               	movlw	1
   784     010E  00AE               	movwf	_activateBuzzer	;volatile
   785     010F  3000               	movlw	0
   786     0110  00AF               	movwf	_activateBuzzer+1	;volatile
   787     0111                     i1l882:
   788                           
   789                           ;main.c: 103:         GP5= 0;
   790     0111  032E               	decf	_activateBuzzer,w	;volatile
   791     0112  042F               	iorwf	_activateBuzzer+1,w	;volatile
   792     0113  1D03               	btfss	3,2
   793     0114  2916               	goto	u46_21
   794     0115  2917               	goto	u46_20
   795     0116                     u46_21:
   796     0116  294A               	goto	i1l94
   797     0117                     u46_20:
   798     0117                     i1l884:
   799                           
   800                           ;main.c: 104:     }else if(i == 1){
   801     0117  3001               	movlw	1
   802     0118  07AC               	addwf	_buzzerCount,f	;volatile
   803     0119  1803               	skipnc
   804     011A  0AAD               	incf	_buzzerCount+1,f	;volatile
   805     011B  3000               	movlw	0
   806     011C  07AD               	addwf	_buzzerCount+1,f	;volatile
   807     011D                     i1l886:
   808                           
   809                           ;main.c: 105:         GP5= 1;
   810     011D  082D               	movf	_buzzerCount+1,w	;volatile
   811     011E  3A80               	xorlw	128
   812     011F  00DF               	movwf	btemp+1
   813     0120  3080               	movlw	128
   814     0121  025F               	subwf	btemp+1,w
   815     0122  1D03               	skipz
   816     0123  2926               	goto	u47_25
   817     0124  300F               	movlw	15
   818     0125  022C               	subwf	_buzzerCount,w	;volatile
   819     0126                     u47_25:
   820     0126  1803               	skipnc
   821     0127  2929               	goto	u47_21
   822     0128  292A               	goto	u47_20
   823     0129                     u47_21:
   824     0129  2932               	goto	i1l892
   825     012A                     u47_20:
   826     012A                     i1l888:
   827                           
   828                           ;main.c: 106:     }else{
   829     012A  1283               	bcf	3,5	;RP0=0, select bank0
   830     012B  1505               	bsf	5,2	;volatile
   831     012C                     i1l890:
   832                           
   833                           ;main.c: 107: 
   834     012C  3001               	movlw	1
   835     012D  00B9               	movwf	driveLED@i
   836     012E  3000               	movlw	0
   837     012F  00BA               	movwf	driveLED@i+1
   838     0130  2198               	fcall	_driveLED
   839                           
   840                           ;main.c: 108:     }
   841     0131  294A               	goto	i1l94
   842     0132                     i1l892:
   843     0132  1283               	bcf	3,5	;RP0=0, select bank0
   844     0133  082D               	movf	_buzzerCount+1,w	;volatile
   845     0134  3A80               	xorlw	128
   846     0135  00DF               	movwf	btemp+1
   847     0136  3080               	movlw	128
   848     0137  025F               	subwf	btemp+1,w
   849     0138  1D03               	skipz
   850     0139  293C               	goto	u48_25
   851     013A  301E               	movlw	30
   852     013B  022C               	subwf	_buzzerCount,w	;volatile
   853     013C                     u48_25:
   854     013C  1803               	skipnc
   855     013D  293F               	goto	u48_21
   856     013E  2940               	goto	u48_20
   857     013F                     u48_21:
   858     013F  2947               	goto	i1l898
   859     0140                     u48_20:
   860     0140                     i1l894:
   861                           
   862                           ;main.c: 109: }
   863     0140  1283               	bcf	3,5	;RP0=0, select bank0
   864     0141  1105               	bcf	5,2	;volatile
   865     0142                     i1l896:
   866                           
   867                           ;main.c: 110: 
   868     0142  3000               	movlw	0
   869     0143  00B9               	movwf	driveLED@i
   870     0144  00BA               	movwf	driveLED@i+1
   871     0145  2198               	fcall	_driveLED
   872                           
   873                           ;main.c: 111: 
   874     0146  294A               	goto	i1l94
   875     0147                     i1l898:
   876                           
   877                           ;main.c: 112: void main(void) {
   878     0147  1283               	bcf	3,5	;RP0=0, select bank0
   879     0148  01AC               	clrf	_buzzerCount	;volatile
   880     0149  01AD               	clrf	_buzzerCount+1	;volatile
   881     014A                     i1l94:	
   882                           ;main.c: 116:     ADCON0=0b10000000;
   883                           
   884                           
   885                           ;main.c: 117:     ADON=1;
   886     014A  110B               	bcf	11,2	;volatile
   887     014B                     i1l900:
   888                           
   889                           ;main.c: 118:     WPU = 0X00;
   890     014B  1283               	bcf	3,5	;RP0=0, select bank0
   891     014C  0181               	clrf	1	;volatile
   892     014D                     i1l95:
   893     014D  0841               	movf	??_isr+2,w
   894     014E  0840               	movf	??_isr+1,w
   895     014F  008A               	movwf	10
   896     0150  0E3F               	swapf	??_isr,w
   897     0151  0083               	movwf	3
   898     0152  0EDE               	swapf	btemp,f
   899     0153  0E5E               	swapf	btemp,w
   900     0154  0009               	retfie
   901     0155                     __end_of_isr:
   902                           
   903                           	psect	intentry
   904     0004                     __pintentry:	
   905                           ;incstack = 0
   906                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   907                           
   908     0004                     interrupt_function:
   909     005E                     saved_w	set	btemp
   910     0004  00DE               	movwf	btemp
   911     0005  0E03               	swapf	3,w
   912     0006  1283               	bcf	3,5	;RP0=0, select bank0
   913     0007  00BF               	movwf	??_isr
   914     0008  080A               	movf	10,w
   915     0009  00C0               	movwf	??_isr+1
   916     000A  085F               	movf	btemp+1,w
   917     000B  00C1               	movwf	??_isr+2
   918     000C  281D               	ljmp	_isr
   919                           
   920                           	psect	text2
   921     0198                     __ptext2:	
   922 ;; *************** function _driveLED *****************
   923 ;; Defined at:
   924 ;;		line 121 in file "main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  i               2    0[BANK0 ] int 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0
   938 ;;      Params:         0       2
   939 ;;      Locals:         0       0
   940 ;;      Temps:          0       0
   941 ;;      Totals:         0       2
   942 ;;Total ram usage:        2 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_isr
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951     0198                     _driveLED:	
   952                           ;psect for function _driveLED
   953                           
   954     0198                     i1l784:	
   955                           ;incstack = 0
   956                           ; Regs used in _driveLED: [wreg+status,2+status,0]
   957                           
   958                           
   959                           ;main.c: 122:     INTCON = 0b11100000;
   960     0198  1283               	bcf	3,5	;RP0=0, select bank0
   961     0199  0839               	movf	driveLED@i,w
   962     019A  043A               	iorwf	driveLED@i+1,w
   963     019B  1D03               	btfss	3,2
   964     019C  299E               	goto	u25_21
   965     019D  299F               	goto	u25_20
   966     019E                     u25_21:
   967     019E  29A1               	goto	i1l788
   968     019F                     u25_20:
   969     019F                     i1l786:
   970                           
   971                           ;main.c: 123: 
   972     019F  1285               	bcf	5,5	;volatile
   973                           
   974                           ;main.c: 124:     GP2= 0;
   975     01A0  29A8               	goto	i1l102
   976     01A1                     i1l788:
   977     01A1  0339               	decf	driveLED@i,w
   978     01A2  043A               	iorwf	driveLED@i+1,w
   979     01A3  1D03               	btfss	3,2
   980     01A4  29A6               	goto	u26_21
   981     01A5  29A7               	goto	u26_20
   982     01A6                     u26_21:
   983     01A6  29A8               	goto	i1l102
   984     01A7                     u26_20:
   985     01A7                     i1l790:
   986                           
   987                           ;main.c: 125:     GP5= 0;
   988     01A7  1685               	bsf	5,5	;volatile
   989     01A8                     i1l102:	
   990                           ;main.c: 126: 
   991                           
   992     01A8  0008               	return
   993     01A9                     __end_of_driveLED:
   994                           
   995                           	psect	text3
   996     0155                     __ptext3:	
   997 ;; *************** function ___wmul *****************
   998 ;; Defined at:
   999 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1002 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  product         2    4[BANK0 ] unsigned int 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2    0[BANK0 ] unsigned int 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0
  1014 ;;      Params:         0       4
  1015 ;;      Locals:         0       2
  1016 ;;      Temps:          0       0
  1017 ;;      Totals:         0       6
  1018 ;;Total ram usage:        6 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_isr
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027     0155                     ___wmul:	
  1028                           ;psect for function ___wmul
  1029                           
  1030     0155                     i1l792:	
  1031                           ;incstack = 0
  1032                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1033                           
  1034     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1035     0156  01BD               	clrf	___wmul@product
  1036     0157  01BE               	clrf	___wmul@product+1
  1037     0158                     i1l794:
  1038     0158  1C39               	btfss	___wmul@multiplier,0
  1039     0159  295B               	goto	u27_21
  1040     015A  295C               	goto	u27_20
  1041     015B                     u27_21:
  1042     015B  2962               	goto	i1l196
  1043     015C                     u27_20:
  1044     015C                     i1l796:
  1045     015C  083B               	movf	___wmul@multiplicand,w
  1046     015D  07BD               	addwf	___wmul@product,f
  1047     015E  1803               	skipnc
  1048     015F  0ABE               	incf	___wmul@product+1,f
  1049     0160  083C               	movf	___wmul@multiplicand+1,w
  1050     0161  07BE               	addwf	___wmul@product+1,f
  1051     0162                     i1l196:
  1052     0162  3001               	movlw	1
  1053     0163                     u28_25:
  1054     0163  1003               	clrc
  1055     0164  0DBB               	rlf	___wmul@multiplicand,f
  1056     0165  0DBC               	rlf	___wmul@multiplicand+1,f
  1057     0166  3EFF               	addlw	-1
  1058     0167  1D03               	skipz
  1059     0168  2963               	goto	u28_25
  1060     0169                     i1l798:
  1061     0169  3001               	movlw	1
  1062     016A                     u29_25:
  1063     016A  1003               	clrc
  1064     016B  0CBA               	rrf	___wmul@multiplier+1,f
  1065     016C  0CB9               	rrf	___wmul@multiplier,f
  1066     016D  3EFF               	addlw	-1
  1067     016E  1D03               	skipz
  1068     016F  296A               	goto	u29_25
  1069     0170                     i1l800:
  1070     0170  0839               	movf	___wmul@multiplier,w
  1071     0171  043A               	iorwf	___wmul@multiplier+1,w
  1072     0172  1D03               	btfss	3,2
  1073     0173  2975               	goto	u30_21
  1074     0174  2976               	goto	u30_20
  1075     0175                     u30_21:
  1076     0175  2958               	goto	i1l794
  1077     0176                     u30_20:
  1078     0176                     i1l802:
  1079     0176  083E               	movf	___wmul@product+1,w
  1080     0177  00BA               	movwf	?___wmul+1
  1081     0178  083D               	movf	___wmul@product,w
  1082     0179  00B9               	movwf	?___wmul
  1083     017A                     i1l198:
  1084     017A  0008               	return
  1085     017B                     __end_of___wmul:
  1086     005E                     btemp	set	94	;btemp
  1087     005E                     wtemp0	set	94
  1088                           
  1089                           	psect	config
  1090                           
  1091                           ;Config register CONFIG @ 0x2007
  1092                           ;	Oscillator Selection bits
  1093                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1094                           ;	Watchdog Timer Enable bit
  1095                           ;	WDTE = OFF, WDT disabled
  1096                           ;	Power-Up Timer Enable bit
  1097                           ;	PWRTE = ON, PWRT enabled
  1098                           ;	GP3/MCLR pin function select
  1099                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  1100                           ;	Brown-out Detect Enable bit
  1101                           ;	BOREN = OFF, BOD disabled
  1102                           ;	Code Protection bit
  1103                           ;	CP = OFF, Program Memory code protection is disabled
  1104                           ;	Data Code Protection bit
  1105                           ;	CPD = OFF, Data memory code protection is disabled
  1106     2007                     	org	8199
  1107     2007  3184               	dw	12676

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      9      38

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___wmul

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0     592
                                              6 BANK0      3     3      0
                             ___wmul
                           _driveLED
 ---------------------------------------------------------------------------------
 (2) _driveLED                                             2     0      2     348
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___wmul
   _driveLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      9      26       4       61.3%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26       6        0.0%
ABS                  0      0      26       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Feb 17 20:29:24 2025

                     fsr 0004      ___wmul@multiplicand 003B                      l107 0196  
                    l108 0196                      l910 0193                      l902 017B  
                    l912 0195                      l904 0187                      l906 0188  
                    l908 018A                      _GP2 002A                      _GP5 002D  
                    _WPU 0095                      _isr 001D                      indf 0000  
                   ?_isr 0039                     _ADON 00F8                     i1l73 0088  
                   i1l94 014A                     i1l95 014D                     i1l79 008A  
                   _TMR0 0001                     _main 017B                     btemp 005E  
                   start 000D                    ??_isr 003F                    ?_main 0039  
                  _CMCON 0019                    _ANSEL 009F                    i1l102 01A8  
                  i1l196 0162                    i1l198 017A                    i1l800 0170  
                  i1l802 0176                    i1l810 0029                    i1l900 014B  
                  i1l820 004E                    i1l812 0033                    i1l830 006B  
                  i1l822 0057                    i1l814 0039                    i1l806 001D  
                  i1l832 0070                    i1l824 0059                    i1l840 0088  
                  i1l816 003B                    i1l808 0023                    i1l850 00B9  
                  i1l842 008E                    i1l834 0077                    i1l826 005F  
                  i1l818 0041                    i1l860 00E1                    i1l852 00C7  
                  i1l844 0094                    i1l836 007C                    i1l828 0064  
                  i1l790 01A7                    i1l870 00FB                    i1l854 00D5  
                  i1l862 00E4                    i1l846 00A2                    i1l838 0083  
                  i1l792 0155                    i1l784 0198                    i1l880 010D  
                  i1l872 0101                    i1l864 00EB                    i1l856 00DA  
                  i1l848 00AF                    i1l794 0158                    i1l786 019F  
                  i1l890 012C                    i1l874 0103                    i1l882 0111  
                  i1l866 00EF                    i1l858 00DD                    i1l796 015C  
                  i1l788 01A1                    i1l892 0132                    i1l884 0117  
                  i1l876 0108                    i1l868 00F1                    i1l798 0169  
                  i1l894 0140                    i1l886 011D                    i1l878 010B  
                  i1l896 0142                    i1l888 012A                    i1l898 0147  
                  u30_20 0176                    u30_21 0175                    u31_20 0029  
                  u31_21 0028                    u40_20 00C7                    u32_20 0039  
                  u40_21 00C6                    u32_21 0038                    u40_25 00C3  
                  u25_20 019F                    u41_20 00D5                    u33_20 004E  
                  u25_21 019E                    u41_21 00D4                    u33_21 004D  
                  u41_25 00D1                    u33_25 004A                    u26_20 01A7  
                  u42_20 00E1                    u34_20 005F                    u26_21 01A6  
                  u42_21 00E0                    u34_21 005E                    u27_20 015C  
                  u43_20 00EB                    u35_20 006B                    u27_21 015B  
                  u43_21 00EA                    u35_21 006A                    u44_20 00FB  
                  u36_20 0077                    u44_21 00FA                    u36_21 0076  
                  u28_25 0163                    u44_25 00F7                    u45_20 0101  
                  u37_20 0083                    u45_21 0100                    u37_21 0082  
                  u29_25 016A                    u46_20 0117                    u38_20 008E  
                  u46_21 0116                    u38_21 008D                    u47_20 012A  
                  u39_20 00AF                    u47_21 0129                    u39_21 00AE  
                  u47_25 0126                    u39_25 00AB                    u48_20 0140  
                  u48_21 013F                    u48_25 013C                    pclath 000A  
                  status 0003                    wtemp0 005E           _activateBuzzer 002E  
        __initialization 000E             __end_of_main 0198                   ??_main 0000  
                 _ADCON0 001F                   _ADRESH 001E                   _ADRESL 009E  
                 _INTCON 000B                   _OSCCAL 0090                   _TMR0IF 005A  
                 _TRISIO 0085         __end_of_driveLED 01A9                   ___wmul 0155  
                 _enable 0020                   saved_w 005E  __end_of__initialization 001B  
         __pcstackCOMMON 0000             __pidataBANK0 01B1            _buttonCounter 0028  
          _buttonPressed 0026               __pbssBANK0 0020               __pmaintext 017B  
                ?___wmul 0039               __pintentry 0004                ?_driveLED 0039  
                __ptext1 001D                  __ptext2 0198                  __ptext3 0155  
                _counter 0038                  _reading 0034                  clrloop0 01AA  
   end_of_initialization 001B               ??_driveLED 0000               _voltageX10 0032  
         __end_of___wmul 017B      start_initialization 000E              __end_of_isr 0155  
               ??___wmul 0000              __pdataBANK0 0042                ___latbits 0000  
          __pcstackBANK0 0039                _firstPass 0044        interrupt_function 0004  
         ___wmul@product 003D                clear_ram0 01A9                 _GO_nDONE 00F9  
    _enableButtonCounter 0024        ___wmul@multiplier 0039            _enableCounter 0030  
              driveLED@i 0039             _selectedTime 0042                 _driveLED 0198  
            _buzzerCount 002C                 intlevel1 0000            _previousClick 0022  
             _OPTION_REG 0081             _timerminutes 0036          _ledBlinkCounter 002A  
